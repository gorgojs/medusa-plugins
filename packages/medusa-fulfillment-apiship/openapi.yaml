
openapi: 3.0.3
info:
  title: ApiShip
  contact:
    name: Техническая поддержка
    email: support@apiship.ru
    url: https://support.apiship.ru/
  termsOfService: https://apiship.ru/offer.pdf
  description: >
    **Документация единого API логистических компаний**


    **Дополнительная документация: [docs.apiship.ru](https://docs.apiship.ru)**


    **Подробнее об ApiShip на [apiship.ru](https://apiship.ru) или задайте
    вопрос на [info@apiship.ru](mailto:info@apiship.ru  )**
  version: 1.0.0
servers:
  - url: /v1
security:
  - token: []
tags:
  - name: users
    description: Сервис пользователей
  - name: billing
    description: Сервис биллинга
  - name: connections
    description: Сервис подключений/договоров к ТК
  - name: orders
    description: Сервис заказов
  - name: externalTracking
    description: Трекинг внешних заказов
  - name: webhooks
    description: Вебхуки
  - name: statuses
    description: Сервис статусов заказов
  - name: orderDocs
    description: Сервис документов заказов
  - name: calculator
    description: Сервис расчета стоимости доставки
  - name: courierCall
    description: Сервис вызова курьера
  - name: lists
    description: Сервис справочник
  - name: apiPay
    description: Сервис платежей
  - name: b2cpl
    description: Дополнительные методы B2CPL
  - name: x5
    description: Дополнительные методы 5Post
  - name: dpd
    description: Дополнительные методы DPD
  - name: logsis
    description: Дополнительные методы Logsis
  - name: yataxi
    description: Дополнительные методы Яндекс.Доставка
  - name: boxberry
    description: Дополнительные методы Boxberry
paths:
  /users/login:
    post:
      security:
        - {}
      tags:
        - users
      summary: Авторизация пользователя. Получение токена к API
      description: Авторизует пользователя и выдает ему токен для доступа к API
      operationId: loginUser
      requestBody:
        description: Объект типа LoginRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /users/signup:
    post:
      security:
        - {}
      tags:
        - users
      summary: Регистрация пользователя
      description: >-
        Регистрирует пользователя в системе. Для завершения регистрации на email
        придет письмо с подтверждением.
      operationId: signupUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupUserRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/SignupUserRequest'
        required: false
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /users/autosignup:
    post:
      tags:
        - users
      summary: Авторегистрация пользователя
      description: >-
        Автоматически регистрирует пользователя в системе без подтверждения
        регистрации через email. Для работы метода необходимо получить
        специальные права доступа в службе поддержки.
      operationId: autoSignupUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupUserRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/SignupUserRequest'
        required: false
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /connections:
    get:
      tags:
        - connections
      summary: Получение списка подключений пользователя
      description: Возвращает постраничный список подключений пользователя
      operationId: getListConnections
      parameters:
        - name: offset
          in: query
          description: Minimum - 0, Maximum - 5000
          schema:
            maximum: 5000
            minimum: 0
            type: integer
            default: 0
        - name: limit
          in: query
          description: Minimum - 1, Maximum - 100
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 10
        - name: filter
          in: query
          description: >-
            JSON-фильтр. Фильтрация по полям объектов. Например, чтобы
            отфильтровать по пользователю, нужно передать
            filter={"userId":"123","providerKey":"cdek"}
          schema:
            type: string
            default: '{}'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ListConnectionResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
    post:
      tags:
        - connections
      summary: Создание подключения к службе доставки
      description: >-
        Проверяет авторизационные данные к системе службы доставки и создает
        подключение.
      operationId: createConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
          application/xml:
            schema:
              $ref: '#/components/schemas/Connection'
        required: false
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
            application/xml:
              schema:
                $ref: '#/components/schemas/Connection'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /connections/{id}:
    get:
      tags:
        - connections
      summary: Получение подключения службы доставки
      description: Возвращает подключение службы доставки.
      operationId: getConnection
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
            application/xml:
              schema:
                $ref: '#/components/schemas/Connection'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
    put:
      tags:
        - connections
      summary: Обновление подключения службы доставки
      description: >-
        Обновляет подключение к службе доставки. При обновлении проверяет
        авторизационные данные в API службы доставки.
      operationId: readConnection
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
          application/xml:
            schema:
              $ref: '#/components/schemas/Connection'
        required: true
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
            application/xml:
              schema:
                $ref: '#/components/schemas/Connection'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
    delete:
      tags:
        - connections
      summary: Удаление подключения службы доставки
      description: >-
        Подключение помечается удаленным. Можно будет восстановить через службу
        поддержки.
      operationId: deleteConnection
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ok
          content: {}
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /connections/schemas:
    get:
      tags:
        - connections
      summary: Получение схемы подключений служб доставки
      description: >
        Возвращает набор полей каждой службы доставки, которые возможно
        заполнить для создания\обновления подключения (connectParams)


        Метод возвращает схему подключения к службе доставки. Обычно
        используется для отрисовки формы создания подключения на стороне
        маркетплейса / модуля / агрегатора. Т.е. метод необходим если вам нужно
        дать возможность своим пользователям создавать подключения, иначе лучше
        это делать через наш личный кабинет.


        Массив fields - это список полей connectParams в методе
        [createConnection](#/connections/createConnection)


        * *code* - это название поля в json

        * *type* - это тип значения

        * *values* - это массив с возможными значениями для поля.

        * *multiple* - поле может принимать несколько значений, т.е. значение
        поля является массивом.

        * *required* - поле обязательно для передачи


        Сценарий:

        1. Получаете схемы всех служб.

        2. По схеме отрисовываете форму для нужной службы доставки.

        3. Формируете connectParams собранный из этой формы.

        4. Создаете подключение.


        Пример:

        1. Получили схему Деливери.Клаб

        ```json

        {
           "providerKey": "d-club",
           "fields": [
             {
               "code": "login",
               "name": "Логин",
               "description": "Логин",
               "type": "string",
               "required": true,
               "multiple": false,
               "values": []
             },
             {
               "code": "password",
               "name": "Пароль",
               "description": "Пароль",
               "type": "string",
               "required": true,
               "multiple": false,
               "values": []
             }
           ]
         }
        ```

        2. Создаем [подключение](#/connections/createConnection) на основе
        схемы. Схема это набор полей в параметре connectParams:

        ```json

        "connectParams": {
          "login": "mylogin",
          "password": "mypassword"
        }

        ```

        3. В итоге получаем такую структуру для создания подключения:

        ```json

        {
          "name": "Основное подключение к службе доставки",
          "providerKey": "d-club",
          "insuranceRate": 0,
          "cashServiceRate": 0,
          "connectParams": {
            "login": "mylogin",
            "password": "mypassword"
          },
          "isUseBaseConnect": 0
        }

        ```
      operationId: readSchemasConnection
      parameters:
        - name: offset
          in: query
          description: Minimum - 0, Maximum - 5000
          schema:
            maximum: 5000
            minimum: 0
            type: integer
            default: 0
        - name: limit
          in: query
          description: Minimum - 1, Maximum - 100
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 10
        - name: providerKey
          in: query
          description: Фильтрации схемы по службе доставки
          schema:
            type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasConnectionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SchemasConnectionResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /orders:
    post:
      tags:
        - orders
      summary: Создание заказа
      description: Создание заказа в системе
      operationId: addOrder
      parameters:
        - in: header
          name: Platform
          description: >-
            ТОЛЬКО ДЛЯ РАЗРАБОТЧИКОВ МОДУЛЕЙ! Код модуля (согласовывается со
            службой поддержки). Если заказ переедается из модуля, то поле
            обязательно!
          schema:
            type: string
      requestBody:
        description: Объект типа OrderRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/OrderRequest'
        required: false
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /orders/sync:
    post:
      tags:
        - orders
      summary: Создание синхронного заказа
      description: Создание синхронного заказа в системе
      operationId: addSyncOrder
      parameters:
        - in: header
          name: Platform
          description: >-
            ТОЛЬКО ДЛЯ РАЗРАБОТЧИКОВ МОДУЛЕЙ! Код модуля (согласовывается со
            службой поддержки). Если заказ переедается из модуля, то поле
            обязательно!
          schema:
            type: string
      requestBody:
        description: Объект типа OrderRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/OrderRequest'
        required: false
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderSyncResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderSyncResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /orders/return:
    post:
      tags:
        - orders
      summary: Создание заказа на возврат (клиентский возврат)
      description: Если по каким-то причинам товар не подошёл получателю, эта услуга легко позволит вернуть его отправителю. На данный момент поддерживается клиентский возврат для СДЕК, Почты России, E-Bulky и 5Post.
      operationId: addReturnOrder
      requestBody:
        description: Объект типа OrderReturnRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderReturnRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/OrderReturnRequest'
        required: false
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderSyncResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderSyncResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /orders/validate:
    post:
      tags:
        - orders
      summary: Валидация заказа
      description: Валидация заказа в системе без отправки в Службу Доставки
      operationId: validateOrder
      parameters:
        - in: header
          name: Platform
          description: >-
            ТОЛЬКО ДЛЯ РАЗРАБОТЧИКОВ МОДУЛЕЙ! Код модуля (согласовывается со
            службой поддержки). Если заказ переедается из модуля, то поле
            обязательно!
          schema:
            type: string
      requestBody:
        description: Объект типа OrderRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/OrderRequest'
        required: false
      responses:
        '200':
          description: valid:true или сообщение об ошибках
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidateOrderResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /orders/{orderId}:
    get:
      tags:
        - orders
      summary: Получение информации по заказу
      description: Получает информацию по заказу
      operationId: getOrderInfo
      parameters:
        - name: orderId
          in: path
          description: ID заказа
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderInfoResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderInfoResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
    put:
      tags:
        - orders
      summary: Изменение заказа
      description: Изменение заказа в системе
      operationId: updateOrder
      parameters:
        - name: orderId
          in: path
          description: ID заказа, который необходимо изменить
          required: true
          schema:
            type: integer
            format: int64
        - in: header
          name: Platform
          description: >-
            ТОЛЬКО ДЛЯ РАЗРАБОТЧИКОВ МОДУЛЕЙ! Код модуля (согласовывается со
            службой поддержки). Если заказ переедается из модуля, то поле
            обязательно!
          schema:
            type: string
      requestBody:
        description: Объект типа OrderRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/OrderRequest'
        required: false
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
    delete:
      tags:
        - orders
      summary: Удаление заказа
      description: >-
        Помечает заказ удаленным. Данный метод не удаляет заказ из системы
        провайдера и не отменяет его. **В случае со СДЭК, заказ удаляется и из системы службы доставки.**
      operationId: deleteOrder
      parameters:
        - name: orderId
          in: path
          description: ID заказа, который необходимо удалить
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DeleteOrderResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /orders/{orderId}/resend:
    post:
      tags:
        - orders
      summary: Повторная отправка заказа в СД
      description: Повторно отправляет заказ в СД
      operationId: resend
      parameters:
        - name: orderId
          in: path
          description: ID заказа
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /orders/{orderId}/cancel:
    get:
      tags:
        - orders
      summary: Отмена заказа
      description: Данный метод пытается удалить или отменить заказа из системы провайдера.
      operationId: cancelOrder
      parameters:
        - name: orderId
          in: path
          description: ID заказа, который необходимо отменить
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CancelOrderResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /orders/{orderId}/status:
    get:
      tags:
        - statuses
      summary: Получение статуса заказа
      description: Получение статуса заказа
      operationId: getOrderStatus
      parameters:
        - name: orderId
          in: path
          description: ID заказа
          required: true
          schema:
            oneOf:
              - type: integer
              - type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderInfo:
                    $ref: '#/components/schemas/OrderInfo'
                  status:
                    $ref: '#/components/schemas/OrderStatus'
            application/xml:
              schema:
                type: object
                properties:
                  orderInfo:
                    $ref: '#/components/schemas/OrderInfo'
                  status:
                    $ref: '#/components/schemas/OrderStatus'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /orders/{orderId}/items:
    post:
      tags:
        - orders
      summary: Обновление товаров заказа
      description: >-
        Обновление доступно, если у заказа указано только 1 место, либо товары
        переданы в items заказа
      operationId: updateOrderItems
      parameters:
        - name: orderId
          in: path
          description: ID заказа
          required: true
          schema:
            type: integer
        - in: header
          name: Platform
          description: >-
            ТОЛЬКО ДЛЯ РАЗРАБОТЧИКОВ МОДУЛЕЙ! Код модуля (согласовывается со
            службой поддержки). Если заказ переедается из модуля, то поле
            обязательно!
          schema:
            type: string
      requestBody:
        description: Объект типа UpdateOrderItemsRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderItemsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateOrderItemsRequest'
        required: false
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /orders/status:
    get:
      tags:
        - statuses
      summary: Получение статуса заказа по номеру заказа в системе клиента
      description: Получение статуса заказа по номеру заказа в системе клиента
      operationId: getOrderStatusByClientNumber
      parameters:
        - name: clientNumber
          in: query
          description: ID заказа в системе клиента
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderInfo:
                    $ref: '#/components/schemas/OrderInfo'
                  status:
                    $ref: '#/components/schemas/OrderStatus'
            application/xml:
              schema:
                type: object
                properties:
                  orderInfo:
                    $ref: '#/components/schemas/OrderInfo'
                  status:
                    $ref: '#/components/schemas/OrderStatus'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /orders/status/history:
    get:
      tags:
        - statuses
      summary: Получение истории статуса заказа по номеру заказа в системе клиента
      description: Получение истории статуса заказа по номеру заказа в системе клиента
      operationId: getOrderStatusHistoryByClientNumber
      parameters:
        - name: clientNumber
          in: query
          description: ID заказа в системе клиента
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderInfo:
                    $ref: '#/components/schemas/OrderInfo'
                  statuses:
                    type: array
                    description: Массив статусов (сортировка created DESC)
                    items:
                      $ref: '#/components/schemas/OrderStatus'
            application/xml:
              schema:
                type: object
                properties:
                  orderInfo:
                    $ref: '#/components/schemas/OrderInfo'
                  statuses:
                    type: array
                    description: Массив статусов (сортировка created DESC)
                    items:
                      $ref: '#/components/schemas/OrderStatus'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /orders/statuses:
    post:
      tags:
        - statuses
      summary: Получение статусов по нескольким заказам
      description: Получение статусов по нескольким заказам
      operationId: getOrderStatuses
      requestBody:
        description: Объект типа OrderRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusIdsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/StatusIdsRequest'
        required: false
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  succeedOrders:
                    type: array
                    items:
                      $ref: '#/components/schemas/StatusCommon'
                  failedOrders:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorOrderInfo'
            application/xml:
              schema:
                type: object
                properties:
                  succeedOrders:
                    type: array
                    items:
                      $ref: '#/components/schemas/StatusCommon'
                  failedOrders:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorOrderInfo'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /orders/statuses/date/{date}:
    get:
      tags:
        - statuses
      summary: >-
        Получение измененных статусов по всем заказам клиента (company) после
        указанной в методе даты
      description: >-
        Получение измененных статусов по всем заказам клиента (company) после
        указанной в методе даты
      operationId: getStatusesByDateNew
      parameters:
        - name: date
          in: path
          description: >-
            Дата (в формате '2015-07-30T13:14:37+03:00'), после которой
            запрашиваются статусы
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatusCommon'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatusCommon'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /orders/statuses/history/date/{date}:
    get:
      tags:
        - statuses
      summary: Получение истории изменения всех статусов с определенной даты
      description: Получение истории изменения всех статусов с определенной даты
      operationId: getStatusHistoryByDate
      parameters:
        - name: date
          in: path
          description: >-
            Дата заказов (в формате 2015-07-30T13:14:37+03:00), с которой
            необходимо получить историю статусов
          required: true
          schema:
            type: string
            format: date
        - name: offset
          in: query
          description: Minimum - 0
          schema:
            maximum: 5000
            minimum: 0
            type: integer
            default: 0
        - name: limit
          in: query
          description: Minimum - 1, Maximum - 1000
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 10
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    description: Массив заказов с их статусами
                    items:
                      $ref: '#/components/schemas/StatusHistoryByDate'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                description: Список
            application/xml:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    description: Массив заказов с их статусами
                    items:
                      $ref: '#/components/schemas/StatusHistoryByDate'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                description: Список
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /orders/{orderId}/statusHistory:
    get:
      tags:
        - statuses
      summary: Получение истории статусов заказа
      description: Получение истории статусов заказа
      operationId: getOrderStatusHistory
      parameters:
        - name: orderId
          in: path
          description: ID заказа
          required: true
          schema:
            oneOf:
              - type: integer
              - type: string
        - name: offset
          in: query
          description: Minimum - 0, Maximum - 5000
          schema:
            maximum: 5000
            minimum: 0
            type: integer
            default: 0
        - name: limit
          in: query
          description: Minimum - 1, Maximum - 100
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 10
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderInfo:
                    $ref: '#/components/schemas/OrderInfo'
                  rows:
                    type: array
                    description: Массив статусов (сортировка created DESC)
                    items:
                      $ref: '#/components/schemas/OrderStatus'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                description: Список
            application/xml:
              schema:
                type: object
                properties:
                  orderInfo:
                    $ref: '#/components/schemas/OrderInfo'
                  rows:
                    type: array
                    description: Массив статусов (сортировка created DESC)
                    items:
                      $ref: '#/components/schemas/OrderStatus'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                description: Список
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /orders/upload:
    post:
      tags:
        - orders
      summary: Загрузка xlsx файла c данными о заказах
      description: Загрузка xlsx файла c данными о заказах
      operationId: uploadOrders
      requestBody:
        description: Объект типа OrderRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersUploadRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/OrdersUploadRequest'
        required: false
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderUploadResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderUploadResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /orders/{orderId}/courier:
    get:
      tags:
        - orders
      summary: Получение информации о курьере
      description: Получение информации о курьере, назначенном на заказ
      parameters:
        - name: orderId
          in: path
          description: ID заказа
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCourierResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderCourierResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /orders/{orderId}/code:
    get:
      tags:
        - orders
      summary: Получение кода подтверждения
      description: Получения кода подтверждения
      parameters:
        - name: orderId
          in: path
          description: ID заказа
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PlacementCodeResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /orders/statuses/interval:
    get:
      tags:
        - statuses
      summary: Получение истории изменения всех статусов по заданному интервалу
      description: Получение истории изменения всех статусов по заданному интервалу
      operationId: getStatusHistoryByInterval
      parameters:
        - name: from
          in: query
          description: Дата начала периода (в формате '2015-07-30T13:14:37+03:00')
          required: true
          schema:
            type: string
        - name: to
          in: query
          description: Дата окончания периода (в формате '2015-08-010T13:14:37+03:00')
          required: true
          schema:
            type: string
        - name: filter
          in: query
          description: >-
            Возможна фильтрация по providerKey. Например providerKey=cdek или
            providerKey=[cdek,dpd]
          schema:
            type: string
        - name: offset
          in: query
          description: Minimum - 0
          schema:
            maximum: 5000
            minimum: 0
            type: integer
            default: 0
        - name: limit
          in: query
          description: Minimum - 1, Maximum - 1000
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 10
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    description: Массив заказов с их статусами
                    items:
                      $ref: '#/components/schemas/StatusHistoryByInterval'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                description: Список
            application/xml:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    description: Массив заказов с их статусами
                    items:
                      $ref: '#/components/schemas/StatusHistoryByInterval'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                description: Список
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /externalTracking/orders:
    post:
      tags:
        - externalTracking
      summary: Трекинг внешних заказов
      description: "Отслеживание заказов, созданных не через ApiShip. Поддерживаемые службы доставки: 5POST, Boxberry, BXB, КСЭ, Logsis,Major Express, Почта России"
      requestBody:
        description: Объект типа
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalTrackingOrdersRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ExternalTrackingOrdersRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalTrackingOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ExternalTrackingOrderResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /externalTracking/orders/{orderId}:
    delete:
      tags:
        - externalTracking
      summary: Удаление трекинга заказа
      description: Удаление трекинга заказа
      parameters:
        - name: orderId
          in: path
          description: ID трекинга
          required: true
          example: e6f3527e-596d-4b7d-845d-df9a505117b4
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalTrackingDeleteOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ExternalTrackingDeleteOrderResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /webhooks:
    post:
      tags:
        - webhooks
      summary: Подписка на вебхуки
      description: "Подписка на событие выбранного типа. Подробнее о типах и формате запроса с нашей стороны читайте здесь: https://docs.apiship.ru/docs/api/webhooks"
      requestBody:
        description: Объект типа
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookSubscribeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebhookSubscribeRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookSubscribeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebhookSubscribeResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
    get:
      tags:
        - webhooks
      summary: Список зарегистрированных подписок
      description: Список зарегистрированных подписок
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebhookListResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /webhooks/{uuid}:
    delete:
      tags:
        - webhooks
      summary: Удаление вебхука
      description: "Удаление подписки на событие"
      parameters:
        - name: uuid
          in: path
          required: true
          description: Уникальный идентификатор подписки
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookSubscriptionDeleteResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebhookSubscriptionDeleteResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /calculator:
    post:
      tags:
        - calculator
      summary: Расчёт стоимости доставки
      description: Рассчитывает стоимость доставки
      operationId: getCalculator
      requestBody:
        description: Объект типа CalculatorRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculatorRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CalculatorRequest'
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  deliveryToDoor:
                    type: array
                    items:
                      $ref: '#/components/schemas/CalculatorToDoorResult'
                  deliveryToPoint:
                    type: array
                    items:
                      $ref: '#/components/schemas/CalculatorToPointResult'
            application/xml:
              schema:
                type: object
                properties:
                  deliveryToDoor:
                    type: array
                    items:
                      $ref: '#/components/schemas/CalculatorToDoorResult'
                  deliveryToPoint:
                    type: array
                    items:
                      $ref: '#/components/schemas/CalculatorToPointResult'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /calculator/intervals:
    post:
      tags:
        - calculator
      summary: Интервалы доставки
      description: Запрашивает у СД доступные интервалы
      requestBody:
        description: Объект типа CalculatorRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculatorIntervalsRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatorIntervalsResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /billing/balance:
    get:
      tags:
        - billing
      summary: Баланс и остаток калькуляций
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  calculations:
                    type: integer
                    nullable: false
                    example: 123456789000
                  freeCalculations:
                    type: integer
                    nullable: false
                    example: 10000
                  money:
                    type: string
                    nullable: false
                    example: '888.88'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /courierCall:
    post:
      tags:
        - courierCall
      summary: Создание заявки на вызов курьера
      description: Создание заявки на вызов курьера
      operationId: courierCall
      requestBody:
        description: Объект типа CourierCallRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourierCallRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CourierCallRequest'
        required: false
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourierCallResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CourierCallResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /courierCall/{courierCallId}/cancel:
    post:
      tags:
        - courierCall
      summary: Отмена заявки на вызов курьера
      description: Отмена заявки на вызов курьера
      operationId: cancelCourierCall
      parameters:
        - name: courierCallId
          in: path
          description: ID заявки на вызов курьера, которую необходимо отменить
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelCourierCallResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CancelCourierCallResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /orders/labels:
    post:
      tags:
        - orderDocs
      summary: Получение ярлыков для заказов
      description: Получение ярлыков для заказов
      operationId: getLabels
      requestBody:
        description: Объект типа LabelsRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/LabelsRequest'
        required: false
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                  failedOrders:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorOrderInfo'
            application/xml:
              schema:
                type: object
                properties:
                  url:
                    type: string
                  failedOrders:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorOrderInfo'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /orders/waybills:
    post:
      tags:
        - orderDocs
      summary: Получение актов приема-передачи заказов
      description: Получение актов приема-передачи заказов
      operationId: getWaybills
      requestBody:
        description: Объект типа DocumentsRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/DocumentsRequest'
        required: false
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  waybillItems:
                    type: array
                    items:
                      $ref: '#/components/schemas/WaybillItem'
                  failedOrders:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorOrderInfo'
            application/xml:
              schema:
                type: object
                properties:
                  waybillItems:
                    type: array
                    items:
                      $ref: '#/components/schemas/WaybillItem'
                  failedOrders:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorOrderInfo'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /lists/statuses:
    get:
      tags:
        - lists
      summary: Получение списка статусов
      description: Получение списка статусов
      operationId: getListStatuses
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
        - name: offset
          in: query
          schema:
            type: integer
        - name: filter
          in: query
          description: Возможна фильтрация по полям key, name
          schema:
            type: string
        - name: fields
          in: query
          description: перечень отдаваемых полей, если не указан, отдаются все поля
          schema:
            type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items:
                      $ref: '#/components/schemas/StatusObject'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                description: Список
            application/xml:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items:
                      $ref: '#/components/schemas/StatusObject'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                description: Список
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /lists/providerStatuses:
    get:
      security:
        - {}
      tags:
        - lists
      summary: Список соответствия статусов СД со статусами сервиса
      description: Получение списка соответствия статусов
      operationId: getListProviderStatuses
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 100
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
        - name: providerKey
          in: query
          schema:
            type: string
            default: ''
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProviderStatus'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                description: Список
            application/xml:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProviderStatus'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                description: Список
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /lists/providers:
    get:
      tags:
        - lists
      summary: Получение списка поставщиков услуг
      description: Получение списка поставщиков услуг
      operationId: getListProviders
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
        - name: offset
          in: query
          schema:
            type: integer
        - name: filter
          in: query
          description: Возможна фильтрация по полям key, name
          schema:
            type: string
        - name: fields
          in: query
          description: перечень отдаваемых полей, если не указан, отдаются все поля
          schema:
            type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProviderObject'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                description: Список
            application/xml:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProviderObject'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                description: Список
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /lists/services:
    get:
      tags:
        - lists
      summary: Получение списка дополнительных услуг
      description: Получение списка дополнительных услуг
      operationId: getListServices
      parameters:
        - name: providerKey
          in: query
          description: Фильтр услуг по провайдеру
          schema:
            type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdditionalServiceObject'
                description: Список
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdditionalServiceObject'
                description: Список
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /lists/providers/{providerKey}/params:
    get:
      deprecated: true
      tags:
        - lists
      summary: Получение возможных параметров для подключения к службе доставки
      description: |
        Получение возможных параметров для подключения к службе доставки


        [НОВЫЙ МЕТОД](#/connections/readSchemasConnection)
      operationId: getProvidersParams
      parameters:
        - name: providerKey
          in: path
          description: Ключ провайдера (службы доставки)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                description: Список параметров подключения
            application/xml:
              schema:
                type: object
                description: Список параметров подключения
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /lists/points:
    get:
      tags:
        - lists
      summary: Получение списка пунктов приема/выдачи
      description: Получение списка пунктов приема/выдачи
      operationId: getListPoints
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
        - name: offset
          in: query
          schema:
            type: integer
        - name: filter
          in: query
          description: >-
            Возможна фильтрация по полям: id, providerKey, code, codeOriginal,
            name, postIndex, lat, lng, countryCode, region, regionType, city,
            cityGuid, cityType, community, communityGuid, communityType, area,
            street, streetType, house, block, office, address, url, email,
            phone, availableOperation, type, cod, paymentCash, paymentCard,
            multiplaceDeliveryAllowed, fittingRoom. Например:
            city=Москва;providerKey=cdek;availableOperation=[2,3].
             Документация работы фильтра: https://docs.apiship.ru/docs/api/query-filter/
             Поиск по полям city/cityGuid или community/communityGuid ищет сразу и по city/cityGuid и по community/communityGuid
          schema:
            type: string
        - name: fields
          in: query
          description: перечень отдаваемых полей, если не указан, отдаются все поля
          schema:
            type: string
        - name: stateCheckOff
          in: query
          description: >-
            Если stateCheckOff=1 отдаются также ПВЗ у которых указан не точный
            адрес расположения
          schema:
            type: boolean
        - name: enabledCheckOff
          in: query
          description: >-
            Если enabledCheckOff=1 Если enabledCheckOff=1 и передан code в поле filter - отдаются также отключенные ПВЗ
          schema:
            type: boolean
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items:
                      $ref: '#/components/schemas/PointObject'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                description: Список
            application/xml:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items:
                      $ref: '#/components/schemas/PointObject'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                description: Список
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /lists/tariffs:
    get:
      tags:
        - lists
      summary: Получение списка актуальных тарифов
      description: Получение списка актуальных тарифов
      operationId: getListTariffs
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
        - name: offset
          in: query
          schema:
            type: integer
        - name: filter
          in: query
          description: Возможна фильтрация по полям id, providerKey, name
          schema:
            type: string
        - name: fields
          in: query
          description: перечень отдаваемых полей, если не указан, отдаются все поля
          schema:
            type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items:
                      $ref: '#/components/schemas/TariffObject'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                description: Список
            application/xml:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items:
                      $ref: '#/components/schemas/TariffObject'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                description: Список
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /lists/pickupTypes:
    get:
      tags:
        - lists
      summary: Получение списка типов приема
      description: Получение списка типов приема
      operationId: getListPickupTypes
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PickupType'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PickupType'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /lists/deliveryTypes:
    get:
      tags:
        - lists
      summary: Получение списка типов доставки
      description: Получение списка типов доставки
      operationId: getListDeliveryTypes
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeliveryType'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeliveryType'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /lists/paymentMethods:
    get:
      tags:
        - lists
      summary: Получение списка способов оплаты
      description: Получение списка способов оплаты
      operationId: getListPaymentMethods
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentMethod'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentMethod'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /lists/operationTypes:
    get:
      tags:
        - lists
      summary: Получение списка типов операций для точек приема/выдачи товаров
      description: Получение списка типов операций для точек приема/выдачи товаров
      operationId: getPointOperationTypes
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PointOperation'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PointOperation'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /lists/pointTypes:
    get:
      tags:
        - lists
      summary: Получение списка типов точек приема/выдачи товаров
      description: Получение списка типов точек приема/выдачи товаров
      operationId: getPointTypes
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PointType'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PointType'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /lists/providerCities/b2cpl:
    get:
      tags:
        - lists
      summary: Получение списка городов b2cpl
      description: Получение списка городов b2cpl
      operationId: getListCitiesB2cpl
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
        - name: offset
          in: query
          schema:
            type: integer
        - name: filter
          in: query
          description: >-
            Возможна фильтрация по полям id, region, residence, zipFirst,
            zipLast, transportDays, flagCourier, flagPvz, flagAvia, cityGuid
          schema:
            type: string
        - name: fields
          in: query
          description: Перечень отдаваемых полей, если не указан, отдаются все поля
          schema:
            type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items:
                      $ref: '#/components/schemas/B2cplCityObject'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                description: Список
            application/xml:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items:
                      $ref: '#/components/schemas/B2cplCityObject'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                description: Список
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /lists/providerCities/boxberry:
    get:
      tags:
        - lists
      summary: Получение списка городов boxberry
      description: Получение списка городов boxberry
      operationId: getListCitiesBoxberry
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
        - name: offset
          in: query
          schema:
            type: integer
        - name: filter
          in: query
          description: Возможна фильтрация по полям id, cityGuid, region, district, cityGuid, courierZips
          schema:
            type: string
        - name: fields
          in: query
          description: Перечень отдаваемых полей, если не указан, отдаются все поля
          schema:
            type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items:
                      $ref: '#/components/schemas/BoxberryCityObject'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                description: Список
            application/xml:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items:
                      $ref: '#/components/schemas/BoxberryCityObject'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                description: Список
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /lists/providerCities/dpd:
    get:
      tags:
        - lists
      summary: Получение списка городов dpd
      description: Получение списка городов dpd
      operationId: getListCitiesDpd
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
        - name: offset
          in: query
          schema:
            type: integer
        - name: filter
          in: query
          description: >-
            Возможна фильтрация по полям id, dpdCityId, cityCode, cityGuid,
            cityName, countryCode, countryName, regionCode, regionName,
            abbreviation, isCodCost
          schema:
            type: string
        - name: fields
          in: query
          description: Перечень отдаваемых полей, если не указан, отдаются все поля
          schema:
            type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items:
                      $ref: '#/components/schemas/DpdCityObject'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                description: Список
            application/xml:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items:
                      $ref: '#/components/schemas/DpdCityObject'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                description: Список
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /lists/providerCities/cdek:
    get:
      tags:
        - lists
      summary: Получение списка городов cdek
      description: Получение списка городов cdek
      operationId: getListCitiesCdek
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
        - name: offset
          in: query
          schema:
            type: integer
        - name: filter
          in: query
          description: >-
            Возможна фильтрация по полям fiasGuid, cityUuid, cdekId, cityName, oblName, countryCode, codCostLimit
          schema:
            type: string
        - name: fields
          in: query
          description: Перечень отдаваемых полей, если не указан, отдаются все поля
          schema:
            type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items:
                      $ref: '#/components/schemas/CdekCityObject'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                description: Список
            application/xml:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items:
                      $ref: '#/components/schemas/CdekCityObject'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                description: Список
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /lists/providers/connections:
    get:
      deprecated: true
      tags:
        - lists
      summary: Получение всех параметров подключения к службам доставки
      description: Получение всех параметров подключения к службам доставки
      operationId: getAllParams
      parameters:
        - name: limit
          in: query
          description: Лимит выборки
          schema:
            type: integer
        - name: offset
          in: query
          description: Смещение выборки
          schema:
            type: integer
        - name: with
          in: query
          description: >-
            Список связанных данных, которые возвращаются в ответе. Возможные
            значения - company
          schema:
            type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    description: Массив параметров
                    items:
                      $ref: '#/components/schemas/Params'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                description: Список
            application/xml:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    description: Массив параметров
                    items:
                      $ref: '#/components/schemas/Params'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                description: Список
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /lists/providers/connections/{id}:
    get:
      deprecated: true
      tags:
        - lists
      summary: Получение параметров подключения по ID
      description: Получение параметров подключения по ID
      operationId: getOneParams
      parameters:
        - name: id
          in: path
          description: ID параметров подключения
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: >-
            Список связанных данных, которые возвращаются в ответе. Возможные
            значения - company
          schema:
            type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Params'
            application/xml:
              schema:
                $ref: '#/components/schemas/Params'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /pay/receipt:
    post:
      tags:
        - apiPay
      summary: Отправка чека
      description: Отправка чека в ОФД
      operationId: sendPayReceipt
      requestBody:
        description: Объект типа PayReceiptRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayReceiptRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/PayReceiptRequest'
        required: false
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayReceiptResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PayReceiptResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /pay/receipt/{receiptId}:
    get:
      tags:
        - apiPay
      summary: Получение статуса по чеку
      description: Получает статуса по чеку
      operationId: getPayReceiptStatus
      parameters:
        - name: receiptId
          in: path
          description: ID чека
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayReceiptFullResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PayReceiptFullResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /b2cpl/call:
    post:
      tags:
        - b2cpl
      summary: Загрузка заявок
      description: Загрузка заявок на исходящий обзвон
      operationId: addOrderCall
      requestBody:
        description: Объект типа B2cplOrderCallRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/B2cplOrderCallRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/B2cplOrderCallRequest'
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/B2cplOrderCallResponse'
            application/xml:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/B2cplOrderCallResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /dpd/bindPreorderPickup:
    post:
      tags:
        - dpd
      summary: Соединить заказ с заявкой на приезд курьера
      description: Соединить заказ с заявкой на приезд курьера
      operationId: bindPreorderPickup
      requestBody:
        description: Объект типа DpdBindPreorderPickupRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DpdBindPreorderPickupRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/DpdBindPreorderPickupRequest'
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DpdBindPreorderPickupResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DpdBindPreorderPickupResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /dpd/createAddressCode:
    post:
      tags:
        - dpd
      summary: Создание кода адреса
      description: Создание кода адреса
      operationId: createAddressCode
      requestBody:
        description: Объект типа CreateAddressCodeRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAddressCodeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateAddressCodeRequest'
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAddressCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CreateAddressCodeResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /dpd/updateAddressCode:
    put:
      tags:
        - dpd
      summary: Обновление кода адреса
      description: Обновление кода адреса
      operationId: updateAddressCode
      requestBody:
        description: Объект типа CreateAddressCodeRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAddressCodeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateAddressCodeRequest'
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAddressCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CreateAddressCodeResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /logsis/confirmOrder:
    post:
      tags:
        - logsis
      summary: Подтвердить заказ
      description: Подтверждение заказа
      operationId: logsisConfirmOrder
      requestBody:
        description: Объект типа ConfirmOrderRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsisConfirmOrderRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/LogsisConfirmOrderRequest'
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsisConfirmOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/LogsisConfirmOrderResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /logsis/updateWarehouse:
    post:
      tags:
        - logsis
      summary: Обновить склад
      description: Обновление склада в системе Logsis
      operationId: logsisUpdateWarehouse
      requestBody:
        description: Объект типа UpdateWarehouseRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsisUpdateWarehouseRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/LogsisUpdateWarehouseRequest'
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsisUpdateWarehouseResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/LogsisUpdateWarehouseResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /x5/createWarehouse:
    post:
      tags:
        - x5
      summary: Создание склада
      description: Создание склада
      operationId: createWarehouse
      requestBody:
        description: Объект типа CreateWarehouseRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWarehouseRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateWarehouseRequest'
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWarehouseResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CreateWarehouseResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /yataxi/confirm:
    post:
      tags:
        - yataxi
      summary: Подтверждение заказа
      description: Подтверждение заказа
      operationId: confirmOrderYataxi
      requestBody:
        description: Объект типа ConfirmOrderYataxi
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmOrderYataxiRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ConfirmOrderYataxiRequest'
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfirmOrderYataxiResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ConfirmOrderYataxiResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /boxberry/warehouse:
    post:
      tags:
        - boxberry
      summary: Создание склада
      description: Создание склада
      requestBody:
        description: Объект типа WarehouseCreateBoxberry
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/WarehouseCreateBoxberry'
                - properties:
                    providerConnectId:
                      type: string
                      description: ID подключения к СД
                      example: 123
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /boxberry/warehouse/{code}:
    get:
      tags:
        - boxberry
      summary: Получение информации о складе
      description: Получение информации о складе
      parameters:
        - name: code
          in: path
          description: Уникальный код склада
          required: true
          schema:
            type: string
        - name: providerConnectId
          in: query
          required: false
          description: ID подключения к СД
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehouseInfoBoxberry'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
    put:
      tags:
        - boxberry
      summary: Обновление склада
      description: Обновление склада
      parameters:
        - name: code
          in: path
          description: Уникальный код склада
          required: true
          schema:
            type: string
      requestBody:
        description: Объект типа WarehouseBoxberry
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/WarehouseBoxberry'
                - properties:
                    providerConnectId:
                      type: string
                      description: ID подключения к СД
                      example: 123
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
    delete:
      tags:
        - boxberry
      summary: Удаление склада
      description: Удаление склада
      parameters:
        - name: code
          in: path
          description: Уникальный код склада
          required: true
          schema:
            type: string
        - name: providerConnectId
          in: query
          required: false
          description: ID подключения к СД
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
  /cse/saveOwnerOfTheGoods:
    post:
      tags:
        - cse
      summary: Передача данных контрагента - владельца товара
      description: >-
        Функция сохраняет нового контрагента в справочнике «Контрагенты» и
        создаёт «Расчетный счет» для этого контрагента в системе «Карго».
      requestBody:
        description: Объект типа SaveOwnerOfTheGoods
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SaveOwnerOfTheGoods'
                - properties:
                    providerConnectId:
                      type: string
                      description: ID подключения к СД
                      example: 123
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        4XX:
          $ref: '#/components/responses/ServiceErrorResponse'
        5XX:
          $ref: '#/components/responses/ServerErrorResponse'
components:
  securitySchemes:
    token:
      type: apiKey
      name: Authorization
      in: header
      description: >-
        Токен необходимо взять в методе [авторизации](#/users/login). Если
        аккаунта в системе нет, то зарегистрироваться через
        [API](#/users/signup) или через [личный
        кабинет](https://a.apiship.ru/#/signup).
  schemas:
    ServerError:
      type: object
      properties:
        message:
          type: string
          description: Описание ошибки сервера
    ServiceError:
      type: object
      properties:
        code:
          type: string
          description: >
            Код ошибки:

            * '040301' - (HTTP-STATUS: 403) Доступ запрещен;

            * '040302' - (HTTP-STATUS: 403) Некорректный пароль;

            * '040303' - (HTTP-STATUS: 403) Пользователь с указанным логином не
            существует;

            * '040101' - (HTTP-STATUS: 401) Некорректный ключ безопасности;

            * '040304' - (HTTP-STATUS: 403) Срок службы ключа безопасности
            истек;

            * '040305' - (HTTP-STATUS: 403) Заказ принадлежит другому клиенту;

            * '040306' - (HTTP-STATUS: 403) Служба доставки не поддерживает
            отмену заказа;

            * '040307' - (HTTP-STATUS: 400) Служба доставки не поддерживает
            отмену заявки;

            * '040308' - (HTTP-STATUS: 403) Недостаточно прав для вызова данного
            метода;

            * '040309' - (HTTP-STATUS: 403) Чек принадлежит другому клиенту;

            * '040080' - (HTTP-STATUS: 404) Указанного заказа не существует;

            * '040081' - (HTTP-STATUS: 400) Указанный заказ уже отменен;

            * '040082' - (HTTP-STATUS: 400) Указанная заявка уже отменена;

            * '040083' - (HTTP-STATUS: 400) Указанная заявка не была передана в
            СД;

            * '040084' - (HTTP-STATUS: 400) Заявка не может быть отменена,
            подробнее в errors;

            * '040085' - (HTTP-STATUS: 400) Чек не был передан в ОФД;

            * '040086' - (HTTP-STATUS: 400) Ошибка при получении статуса чека;

            * '040087' - (HTTP-STATUS: 404) Указанного чека не существует;

            * '040088' - (HTTP-STATUS: 400) Ошибка при создании заказа в СД;

            * '040089' - (HTTP-STATUS: 400) Ошибка при обновлении заказа в СД;

            * '040000' - (HTTP-STATUS: 400) Общая ошибка валидации, смотрите
            документацию;

            * '040001' - (HTTP-STATUS: 400) Ошибка валидации при попытке
            аутентификации;

            * '040002' - (HTTP-STATUS: 400) Ошибка валидации;

            * '040003' - (HTTP-STATUS: 400) Ошибка валидации при попытке
            рассчитать стоимость доставки;

            * '040004' - (HTTP-STATUS: 400) Неправильная кодировка. Кодировка
            должна быть UTF-8;

            * '040005' - (HTTP-STATUS: 400) Для Вашей компании нет параметров
            доступа в данную службы доставки;

            * '040006' - (HTTP-STATUS: 400) У Вашей компании нет подключенных
            СД;

            * '040010' - (HTTP-STATUS: 400) Фильтр не валидный, смотрите
            документацию;

            * '040011' - (HTTP-STATUS: 400) В фильтре присутствуют поля, по
            которым фильтрация не осуществляется;

            * '040012' - (HTTP-STATUS: 400) В поле fields присутствуют поля,
            которые не доступны для клиентов;

            * '040013' - (HTTP-STATUS: 400) В поле with присутствуют поля,
            которые не доступны для клиентов или недопустимы;

            * '040014' - (HTTP-STATUS: 400) Не удалось получить файл для
            импорта;

            * '040015' - (HTTP-STATUS: 400) Ошибка создания кода адреса в СД;

            * '040016' - (HTTP-STATUS: 404) Не найдено;

            * '040017' - (HTTP-STATUS: 400) Неверная ссылка;

            * '040018' - (HTTP-STATUS: 404) У заказа нет статусов;

            * '040901' - (HTTP-STATUS: 409) Пользователь с таким логином уже
            существует;

            * '040902' - (HTTP-STATUS: 409) Параметры подключения для данной СД
            уже созданы;

            * '050001' - (HTTP-STATUS: 500) Свяжитесь с администрацией;

            * '060001' - (HTTP-STATUS: 402) Пополните баланс для использования
            сервиса калькуляции;
          example: '040002'
          enum:
            - '040301'
            - '040302'
            - '040303'
            - '040101'
            - '040304'
            - '040305'
            - '040306'
            - '040307'
            - '040308'
            - '040309'
            - '040080'
            - '040081'
            - '040082'
            - '040083'
            - '040084'
            - '040085'
            - '040086'
            - '040087'
            - '040088'
            - '040089'
            - '040000'
            - '040001'
            - '040002'
            - '040003'
            - '040004'
            - '040005'
            - '040006'
            - '040010'
            - '040011'
            - '040012'
            - '040013'
            - '040014'
            - '040015'
            - '040016'
            - '040017'
            - '040018'
            - '040901'
            - '040902'
            - '050001'
            - '060001'
        message:
          type: string
          description: >-
            Сообщение об ошибке. Сервер отдает это поле всегда. Остальные могут
            не отдаваться в различных сценариях.
          example: Ошибка валидации
        description:
          type: string
          description: Описание ошибки
          example: Описание ошибки валидации
        moreInfo:
          type: string
          description: Дополнительная информация для решения ошибки
          example: Вопросы пишите на адрес support@apiship.ru
        errors:
          type: array
          description: Детализированная информация об ошибке
          items:
            type: object
            properties:
              field:
                type: string
                description: Названия поля
              message:
                type: string
                description: Детальное сообщение об ошибке
      description: Bad request
    SchemasConnectionResponse:
      type: object
      properties:
        rows:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionSchema'
        meta:
          $ref: '#/components/schemas/PaginationMeta'
    ConnectionSchema:
      type: object
      properties:
        providerKey:
          type: string
        fields:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                description: Код поля
                example: login
              name:
                type: string
                description: Текстовое название переменной
                example: Логин
              description:
                type: string
                description: Текстовое описание
                example: Логин в системе службы доставки
              type:
                type: string
                description: Тип, который принимает поле
                example: string
                enum:
                  - bool
                  - int
                  - float
                  - string
                  - array
              required:
                type: boolean
                description: Обязательно ли поле
                example: false
              multiple:
                type: boolean
                description: Может ли поле принимать несколько значений
                example: false
              values:
                type: array
                description: >-
                  Объект с возможными значениями для поля. Если у поля
                  type=array и multiple=false, то передавать значение не
                  оборачивая в массив
                items:
                  type: object
                  properties:
                    label:
                      type: string
                      description: Название
                    value:
                      type: string
                      description: Значение, которое нужно передавать
    ListConnectionResponse:
      type: object
      properties:
        rows:
          type: array
          description: Массив объектов подключений
          items:
            $ref: '#/components/schemas/Connection'
        meta:
          $ref: '#/components/schemas/PaginationMeta'
    Connection:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        companyId:
          type: string
          description: ID - компании (можно не указывать)
          readOnly: true
        providerKey:
          type: string
          description: Код службы доставки
        name:
          type: string
          description: Название подключения
          example: Основное подключение к службе доставки
        inn:
          type: string
          description: ИНН вашей организации
          example: 1234567890
        insuranceRate:
          type: number
          description: >-
            Своя для компании процентная ставка страховки (%) - перекрывает
            общую для СД
        cashServiceRate:
          type: number
          description: >-
            Своя для компании процентная ставка кассового обслуживания (%) -
            перекрывает общую для СД
        connectParams:
          type: object
          description: >-
            Данные берутся из метода
            [/connections/schemas](#/connections/schemas)
          properties: {}
          additionalProperties:
            type: string
            description: В некоторых случаях может передаваться массив строк
        isUseBaseConnect:
          type: integer
          description: >-
            0 - никогда не использовать базовое подключение ApiShip; 1 -
            подключение будет использовать базовое подключение ApiShip, т.е.
            передавать connectParams не нужно; 2 - будет использовано базовое
            подключение, если в процессе калькуляции по текущим параметрам
            подключения возникнет ошибка;
        created:
          type: string
          format: date-time
          description: Дата создания
          readOnly: true
        updated:
          type: string
          format: date-time
          description: Дата обновления
          readOnly: true
    SignupUserRequest:
      type: object
      properties:
        login:
          type: string
          example: user123456
        email:
          type: string
          example: test@test.com
        password:
          type: string
          example: qwerty123
          writeOnly: true
    UserResponse:
      type: object
      properties:
        id:
          type: string
          description: ИД
          readOnly: true
        companyId:
          type: string
          description: ИД компании
          readOnly: true
        login:
          type: string
          example: user123456
        email:
          type: string
          example: test@test.com
        roles:
          type: array
          description: Доступные роли пользователя
          readOnly: true
          items:
            type: string
        useDraft:
          type: boolean
          description: Заказ создается как черновик
        offerAccepted:
          type: string
          description: Дата принятия оферты
        created:
          type: string
          format: date-time
          description: Дата создания
          readOnly: true
        updated:
          type: string
          format: date-time
          description: Дата изменения
          readOnly: true
    ConfirmOrderYataxiResponse:
      type: object
      properties:
        id:
          type: string
          description: Идентификатор заявки, полученный на этапе создания заявки
        status:
          type: string
          description: Статус заявки
        version:
          type: string
          description: Версия заявки из запроса
    ConfirmOrderYataxiRequest:
      required:
        - orderId
      type: object
      properties:
        orderId:
          type: string
          description: ID заказа
    UpdateOrderItemsRequest:
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
    OrderRequest:
      required:
        - cost
        - order
        - recipient
        - sender
      type: object
      properties:
        order:
          $ref: '#/components/schemas/OrderData'
        cost:
          $ref: '#/components/schemas/Cost'
        sender:
          $ref: '#/components/schemas/Sender'
        recipient:
          $ref: '#/components/schemas/Recipient'
        returnAddress:
          $ref: '#/components/schemas/ReturnAddress'
        items:
          type: array
          deprecated: true
          items:
            $ref: '#/components/schemas/Item'
        places:
          type: array
          items:
            $ref: '#/components/schemas/Place'
        extraParams:
          type: array
          items:
            $ref: '#/components/schemas/ExtraParam'
    OrderReturnRequest:
      required:
        - cost
        - order
        - recipient
        - sender
      type: object
      properties:
        directOrderId:
          type: integer
          example: 123456
          description: "Идентификатор прямого заказа (orderId из методов создания заказа)"
        order:
          $ref: '#/components/schemas/OrderReturnData'
        cost:
          $ref: '#/components/schemas/ReturnCost'
        sender:
          $ref: '#/components/schemas/Sender'
        recipient:
          $ref: '#/components/schemas/Recipient'
        items:
          type: array
          deprecated: true
          items:
            $ref: '#/components/schemas/ReturnItem'
        places:
          type: array
          items:
            $ref: '#/components/schemas/Place'
        extraParams:
          type: array
          items:
            $ref: '#/components/schemas/ExtraParam'
    PayReceiptRequest:
      required:
        - items
        - payReceipt
      type: object
      properties:
        payReceipt:
          $ref: '#/components/schemas/PayReceiptData'
        items:
          type: array
          items:
            $ref: '#/components/schemas/PayReceiptItem'
        shouldPrint:
          type: boolean
    PayReceiptData:
      required:
        - payType
        - totalPrice
        - type
      type: object
      properties:
        clientNumber:
          type: string
          description: Номер заказа в системе заказчика
          example: '120000034'
        printNumber:
          type: string
          description: Номер заказа для печати на бумажном чеке
          example: '123456789'
        type:
          type: string
          description: Тип чека sale - приход или return - возврат
          example: sale
        payType:
          type: string
          description: Тип оплаты чека cash - наличные или card - банковская карта
          example: cash
        totalPrice:
          type: number
          description: Итоговая цена в чеке
          format: float
          example: 199.54
        email:
          type: string
          description: E-mail покупателя
          example: example@gmail.com
        phone:
          type: string
          description: Телефон покупателя
          example: '71234567890'
    PayReceiptFiscalData:
      type: object
      properties:
        receipt_number:
          type: integer
          example: 1
        model_number:
          type: string
          example: '61'
        factory_kkt_number:
          type: string
          example: '00106106050261'
        factory_fn_number:
          type: string
          example: '9999078900006741'
        registration_number:
          type: string
          example: '1014591.0'
        fn_expired_period:
          type: integer
          example: 13
        fd_number:
          type: integer
          example: 71234567890
        fpd:
          type: integer
          example: 1525842555
        registration_date:
          type: string
          format: date-time
          example: '2017-05-23T00:00:00.000000Z'
        fn_expired_at:
          type: string
          format: date-time
          example: '2017-06-23T00:00:00.000000Z'
    PayReceiptItem:
      required:
        - price
        - quantity
        - title
      type: object
      properties:
        price:
          type: number
          description: Стоимость единицы товара с учетом НДС в рублях
          format: float
          example: 30
        quantity:
          type: integer
          description: Кол-во товара
          format: int32
          example: 2
        title:
          type: string
          description: Наименование товара
          example: Товар 1
        vatRate:
          type: number
          description: Код процентной ставки НДС
          format: integer
          example: 18
        barcode:
          type: string
          description: Штрихкод на товаре
          example: '1234567890123'
        companyName:
          maxLength: 255
          type: string
          description: Наименование компании поставщика / продавца товара
          example: ООО "Тест"
        companyInn:
          maxLength: 12
          type: string
          description: ИНН поставщика / продавца товара
          pattern: ^([0-9]{10}|[0-9]{12})$
          example: '1234567890'
    PayReceiptResponse:
      type: object
      properties:
        id:
          type: integer
          description: Номер чека
          example: 1002
        providerNumber:
          type: string
          description: Номер чека в системе ОФД
          example: '10000023'
        status:
          type: integer
          description: >-
            Статус чека 0-новый, 1-был отправлен в ОФД, 2-обрабатывается ОФД,
            3-успешно обработан, 4-ошибка
          example: 3
        statusDescription:
          type: string
          description: >-
            Текстовое описание текущего статуса (или текст ошибки при
            соответствующем статусе)
          example: Чек успешно зарегистрирован в ККТ
        created:
          type: string
          format: date-time
          description: Дата создания чека
        receiptImage:
          type: string
          description: Ссылка на изображение чека
        fiscalData:
          $ref: '#/components/schemas/PayReceiptFiscalData'
    PayReceiptFullResponse:
      allOf:
        - $ref: '#/components/schemas/PayReceiptResponse'
        - type: object
          properties:
            payReceipt:
              $ref: '#/components/schemas/PayReceiptData'
            items:
              type: array
              items:
                $ref: '#/components/schemas/PayReceiptItem'
    Address:
      type: object
      properties:
        countryCode:
          type: string
          description: Код страны в соответствии с ISO 3166-1 alpha-2
          example: RU
        postIndex:
          type: string
          description: Почтовый индекс
          example: '105062'
        region:
          type: string
          description: Область или республика или край
          maxLength: 100
          example: Москва
        area:
          type: string
          description: Район
          maxLength: 50
          example: ''
        city:
          type: string
          description: Город или населенный пункт
          maxLength: 100
          example: Москва
        cityGuid:
          type: string
          description: ID города в базе ФИАС
          maxLength: 50
          example: 0c5b2444-70a0-4932-980c-b4dc0d3f02b5
        community:
          type: string
          description: Населённый пункт
          maxLength: 100
          nullable: true
        communityGuid:
          type: string
          description: ID населённого пункта в базе ФИАС
          maxLength: 55
          nullable: true
        street:
          type: string
          description: Улица
          maxLength: 55
          example: Машкова
        house:
          type: string
          description: Дом
          maxLength: 50
          example: '21'
        block:
          type: string
          description: Строение/Корпус
          maxLength: 50
          example: ''
        office:
          type: string
          description: Офис/Квартира
          maxLength: 50
          example: ''
        lat:
          type: number
          description: Широта
          format: float
          example: 55.7647252
        lng:
          type: number
          description: Долгота
          format: float
          example: 37.6537218
        addressString:
          type: string
          description: >-
            Полный адрес одной строкой. При заполнении этого поля остальные
            можно не заполнять, кроме countryCode
          maxLength: 255
          example: г Москва, ул Машкова, д 21
    Recipient:
      allOf:
        - $ref: '#/components/schemas/ReturnAddress'
        - type: object
          properties:
            companyInn:
              maxLength: 12
              type: string
              description: ИНН компании
              pattern: ^([0-9]{10}|[0-9]{12})$
              example: '1234567890'
            additionalPhone:
              maxLength: 15
              type: string
              description: Дополнительный телефон
              example: '79250001115'
    Sender:
      allOf:
        - $ref: '#/components/schemas/Recipient'
        - type: object
          required:
            - countryCode
            - addressString
            - contactName
            - phone
          properties:
            brandName:
              maxLength: 255
              type: string
              description: Бренд продавца
              example: ApiShip
            additionalPhone:
              maxLength: 15
              type: string
              description: Дополнительный телефон
              example: '79250001115'
              readOnly: true
    ReturnAddress:
      allOf:
        - $ref: '#/components/schemas/Address'
        - type: object
          required:
            - countryCode
            - addressString
            - contactName
            - phone
          properties:
            companyName:
              maxLength: 100
              type: string
              description: Название компании
              example: ООО "Тест"
            contactName:
              maxLength: 255
              type: string
              description: ФИО контактного лица
              example: Иванов Иван Иванович
            phone:
              maxLength: 15
              type: string
              description: Контактный телефон
              example: '79250001115'
            email:
              maxLength: 50
              type: string
              description: Контактный email адрес
              example: test@test.com
            comment:
              maxLength: 65535
              type: string
              description: Комментарий
              example: ''
    Dimensions:
      type: object
      properties:
        height:
          type: integer
          nullable: true
          description: Высота единицы товара в сантиметрах
          example: 45
        length:
          type: integer
          nullable: true
          description: Длина единицы товара в сантиметрах
          example: 30
        width:
          type: integer
          nullable: true
          description: Ширина единицы товара в сантиметрах
          example: 20
    Sizes:
      allOf:
        - $ref: '#/components/schemas/Dimensions'
        - type: object
          properties:
            weight:
              type: integer
              description: Вес единицы товара в граммах
              example: 20
    ReturnItem:
      allOf:
        - type: object
          required:
            - description
            - quantity
          properties:
            weight:
              type: integer
              description: Вес единицы товара в граммах
              example: 20
            articul:
              type: string
              description: Артикул товара
              example: '1189.0'
            markCode:
              type: string
              description: Код маркировки (UTF-8)
              example: >-
                010290000046994521AK-rO?H!hC2(M\u001D91003A\u001D92cYTu3sTj82KJR3+6hVtQyAfa5Zf6Q2alfJEnwe2RIv4GAWVy2GUptk7P1NYxRsIgsTJi+Wgg+K3dncPELDJ9Ag==
            description:
              type: string
              description: Наименование товара
              example: Товар 1
            quantity:
              type: integer
              description: Кол-во товара. Если указан markCode, то кол-во не может быть > 1
              format: int32
              example: 1
            assessedCost:
              type: number
              description: Оценочная стоимость единицы товара в рублях
              format: float
              example: 50
            barcode:
              type: string
              description: Штрихкод на товаре
              example: '1234567890123'
            companyName:
              maxLength: 255
              type: string
              description: Наименование компании поставщика / продавца товара
              example: ООО "Тест"
            companyInn:
              maxLength: 12
              type: string
              description: ИНН поставщика / продавца товара
              pattern: ^([0-9]{10}|[0-9]{12})$
              example: '1234567890'
            companyPhone:
              maxLength: 15
              type: string
              description: Телефон поставщика / продавца товара
              example: 79887776655
    Item:
      allOf:
        - $ref: '#/components/schemas/Sizes'
        - type: object
          required:
            - description
            - quantity
          properties:
            articul:
              type: string
              description: Артикул товара
              example: '1189.0'
            markCode:
              type: string
              description: Код маркировки (UTF-8)
              example: >-
                010290000046994521AK-rO?H!hC2(M\u001D91003A\u001D92cYTu3sTj82KJR3+6hVtQyAfa5Zf6Q2alfJEnwe2RIv4GAWVy2GUptk7P1NYxRsIgsTJi+Wgg+K3dncPELDJ9Ag==
            description:
              type: string
              description: Наименование товара
              example: Товар 1
            quantity:
              type: integer
              description: Кол-во товара. Если указан markCode, то кол-во не может быть > 1
              format: int32
              example: 1
            quantityDelivered:
              type: integer
              nullable: true
              description: >-
                Заполняется только при частичной доставке и показывает сколько
                единиц товара выкуплено
              format: int32
              example: 2
            assessedCost:
              type: number
              nullable: true
              description: Оценочная стоимость единицы товара в рублях
              format: float
              example: 50
            cost:
              type: number
              nullable: true
              description: Стоимость единицы товара с учетом НДС в рублях
              format: float
              example: 30
            costVat:
              type: number
              nullable: true
              description: |
                Процентная ставка НДС:
                - '-1' - Без НДС;
                - '0' - НДС 0%;
                - '10' - НДС 10%;
                - '20' - НДС 20%;
                - '5' - НДС 5%;
                - '7' - НДС 7%;
              enum:
                - -1
                - 0
                - 10
                - 20
                - 5
                - 7
              default: -1
            barcode:
              type: string
              description: Штрихкод на товаре
              example: '1234567890123'
            companyName:
              maxLength: 255
              type: string
              description: Наименование компании поставщика / продавца товара
              example: ООО "Тест"
            companyInn:
              maxLength: 12
              type: string
              description: ИНН поставщика / продавца товара
              pattern: ^([0-9]{10}|[0-9]{12})$
              example: '1234567890'
            companyPhone:
              maxLength: 15
              type: string
              description: Телефон поставщика / продавца товара
              example: 79887776655
            tnved:
              type: string
              description: Код ТН ВЭД
              example: 6810190009
            url:
              type: string
              description: Ссылка на страницу товара в интернет-магазине
              example: https://mymarket.example.com/item/product-1/
    Place:
      allOf:
        - $ref: '#/components/schemas/Sizes'
        - type: object
          required:
            - weight
            - items
          properties:
            placeNumber:
              type: string
              description: Номер места в информационной системе клиента
              example: '123421931239'
            barcode:
              type: string
              description: ШК места
              example: '800028197737'
            items:
              type: array
              items:
                $ref: '#/components/schemas/Item'
    PlaceResponse:
      allOf:
        - properties:
            providerNumber:
              type: string
              description: Номер грузоместа в СД
              example: '1234567890'
            providerBarcode:
              type: string
              description: ШК места, полученный от провайдера
              example: '100000000101714'
        - $ref: '#/components/schemas/Place'
    OrderData:
      allOf:
        - type: object
          required:
            - clientNumber
            - deliveryType
            - pickupType
            - providerKey
            - tariffId
            - weight
          properties:
            clientNumber:
              maxLength: 100
              type: string
              description: Номер заказа в системе клиента
              example: 6532-TR-23
            barcode:
              maxLength: 100
              type: string
              description: Штрих-код
              example: '123456'
            description:
              maxLength: 65535
              type: string
              description: Комментарий
              example: Очень важный заказ
            providerKey:
              type: string
              description: Код службы доставки
              example: cdek
            providerConnectId:
              type: string
              description: ID подключения вашей компании к СД
              example: '11102'
            pickupType:
              type: integer
              description: >-
                Тип забора груза. 1 - отгрузка груза курьером; 2 - отгрузка
                груза на ПВЗ;
              example: 1
            deliveryType:
              type: integer
              description: Тип доставки. 1 - доставка курьером; 2 - доставка на ПВЗ;
              example: 1
            tariffId:
              type: integer
              description: Тариф службы доставки по которому осуществляется доставка
              example: 16
            pointInId:
              type: integer
              nullable: true
              description: ID точки приема заказа
              example: 333
            pointOutId:
              type: integer
              nullable: true
              description: ID точки выдачи заказа
              example: 407
            pickupDate:
              type: string
              nullable: true
              format: date
              description: Предполагаемая дата передачи груза в службу доставки
            pickupTimeStart:
              type: string
              pattern: ^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$
              description: Начальное время забора груза
              example: '09:00'
            pickupTimeEnd:
              type: string
              pattern: ^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$
              description: Конечное время забора груза
              example: '18:00'
            deliveryDate:
              type: string
              format: date
              description: Дата доставки
            deliveryTimeStart:
              type: string
              pattern: ^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$
              description: Начальное время доставки
              example: '09:00'
            deliveryTimeEnd:
              type: string
              pattern: ^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$
              description: Конечное время доставки
              example: '18:00'
            trackingUrl:
              type: string
              description: Ссылка отслеживания из системы СД
              example: 'https://tracking.example.com/order/123'
        - $ref: '#/components/schemas/Sizes'
    OrderDataResponse:
      allOf:
        - properties:
            providerNumber:
              maxLength: 100
              type: string
              description: >-
                Номер заказа в системе службы доставки. Если СД выдает диапазон
                номеров заказа
              example: 11e51r6
            additionalProviderNumber:
              maxLength: 100
              type: string
              description: Дополнительный номер заказа в системе службы доставки
              example: '21309812039812'
        - $ref: '#/components/schemas/OrderData'
    OrderReturnData:
      allOf:
        - type: object
          required:
            - clientNumber
            - deliveryType
            - pickupType
            - providerKey
            - tariffId
          properties:
            clientNumber:
              maxLength: 100
              type: string
              description: Номер заказа в системе клиента
              example: 6532-TR-23
            description:
              maxLength: 65535
              type: string
              description: Комментарий
              example: Очень важный заказ
            providerKey:
              type: string
              description: Код службы доставки
              example: cdek
            providerConnectId:
              type: string
              description: ID подключения вашей компании к СД
              example: '11102'
            pickupType:
              type: integer
              description: >-
                Тип забора груза. 1 - отгрузка груза курьером; 2 - отгрузка
                груза на ПВЗ;
              example: 1
            deliveryType:
              type: integer
              description: Тип доставки. 1 - доставка курьером; 2 - доставка на ПВЗ;
              example: 1
            tariffId:
              type: integer
              description: Тариф службы доставки по которому осуществляется доставка
              example: 16
            pointInId:
              type: integer
              description: ID точки приема заказа
              example: 333
            pointOutId:
              type: integer
              description: ID точки выдачи заказа
              example: 407
    Cost:
      required:
        - assessedCost
        - codCost
      type: object
      properties:
        assessedCost:
          type: number
          description: Оценочная стоимость / сумма страховки (в рублях). Совпадает с суммой оценочной стоимости по всем товарам(places[].items[].assessedCost)
          format: float
          example: 50
        deliveryCost:
          type: number
          nullable: true
          description: Стоимость доставки с учетом НДС (в рублях)
          format: float
          example: 200
        deliveryCostVat:
          type: number
          nullable: true
          description: |
            Процентная ставка НДС:
            - '-1' - Без НДС;
            - '0' - НДС 0%;
            - '10' - НДС 10%;
            - '20' - НДС 20%;
            - '5' - НДС 5%;
            - '7' - НДС 7%;
          enum:
            - -1
            - 0
            - 10
            - 20
            - 5
            - 7
          default: -1
        codCost:
          type: number
          description: Сумма наложенного платежа с учетом НДС (в рублях). Совпадает с суммой наложенного платежа по всем товарам(places[].items[].cost) + стоимостью доставки(cost.deliveryCost)
          format: float
          example: 230
        isDeliveryPayedByRecipient:
          type: boolean
          nullable: true
          description: >-
            Флаг для указания стороны, которая платит за услуги доставки
            (0-отправитель, 1-получатель)
          format: boolean
          example: false
        paymentMethod:
          type: number
          nullable: true
          description: >-
            Способ оплаты заказа:
            - 1 - Наличные;
            - 2 - Карта;
            - 3 - Смешанная оплата(наличные и карта)
            - 4 - Безналичная оплата (по счету)
          enum:
            - 1
            - 2
            - 3
            - 4
        deliveryCostThresholds:
          description: Пороги стоимости доставки, используются для динамической стоимости доставки в случае частичного выкупа (Поддержка есть только у СДЭК, Logsis, Lpost)
          type: array
          items:
            $ref: '#/components/schemas/DeliveryCostThreshold'
    ReturnCost:
      required:
        - assessedCost
      type: object
      properties:
        assessedCost:
          type: number
          description: Оценочная стоимость / сумма страховки (в рублях)
          format: float
          example: 50
    OrderInfoCost:
      allOf:
        - $ref: '#/components/schemas/Cost'
        - type: object
          properties:
            usedPaymentType:
              type: number
              description: >-
                Каким способом получатель оплатил заказ (1-наличными,
                2-кредитной картой)
              format: integer
              example: 2
    OrdersUploadRequest:
      required:
        - columnMap
        - columnSettings
        - file
        - providerKey
      type: object
      properties:
        providerKey:
          type: string
          description: Код службы доставки
          example: cdek
        mode:
          type: string
          description: Метод загрузки заказов
          example: sync
        errorsToFile:
          type: boolean
          description: >-
            Флаг возвращения base64 строки исходного файла с ошибками создания,
            если имеются. (true - в исходный файл будут записаны ошибки создания
            и в ответе будет возвращена base64 строка данного файла; false - в
            файл не будут записаны ошибки)
          format: boolean
          example: false
        file:
          $ref: '#/components/schemas/File'
        columnSettings:
          $ref: '#/components/schemas/ColumnSettings'
        columnMap:
          $ref: '#/components/schemas/ColumnMap'
        defaultData:
          $ref: '#/components/schemas/DefaultData'
    DefaultData:
      type: object
      properties:
        sender.phone:
          type: string
          description: Контактный телефон по умолчанию
          example: '+79999999999'
        sender.city:
          type: string
          description: Город по умолчанию
          example: Москва
        sender.countryCode:
          type: string
          description: Код страны в соответствии с ISO 3166-1 alpha-2 по умолчанию
          example: RU
        sender.street:
          type: string
          description: Улица по умолчанию
          example: Тверская
        sender.house:
          type: string
          description: Номер дома по умолчанию
          example: '2'
        order.pickupType:
          type: integer
          description: Тип забора груза по умолчанию
          example: 2
        order.deliveryType:
          type: integer
          description: Тип доставки по умолчанию
          example: 2
        cost.codCost:
          type: string
          description: >-
            Сумма наложенного платежа будет считаться по указанной колонке или
            можно указать значение по умолчанию
          example: sumByOrderRows(J)
    File:
      type: object
      properties:
        base64:
          type: string
          description: >-
            Файл, закодированный в base64 строку. Обязательно, если не заполнено
            поле url
          example: iVBORw0KGgoAAAANSUhEUgAAB4AAAAQ4CAYAAADo08FDAA...
        url:
          type: string
          description: Ссылка на файл. Обязательно, если не заполнено поле base64
          example: https://test.ru/test.xlsx
        type:
          type: string
          description: Тип файла
          example: xlsx
    ColumnSettings:
      required:
        - dateFormat
        - itemsNewRow
        - nameFormat
        - timeFormat
      type: object
      properties:
        dateFormat:
          type: string
          format: date
          description: Формат даты в таблице
        nameFormat:
          type: boolean
          description: >-
            Формат ФИО в таблице (true(или 1) - ФИО в разных столбцах; false(или
            0) - ФИО в одном столбце)
          example: false
        itemsNewRow:
          type: boolean
          description: >-
            Тип расположения данных о товарных вложениях (true - располагаются в
            строке информации о заказе; false - располагаются под информацией о
            заказе)
          example: true
        timeFormat:
          type: string
          description: Формат времени в таблице
          example: H:i:s
        rowStart:
          type: integer
          description: Порядковый номер первой считываемой строки таблицы
          example: 1
        rowEnd:
          type: integer
          description: Порядковый номер последней считываемой строки таблицы
          example: 10
    ColumnMap:
      required:
        - cost.assessedCost
        - cost.codCost
        - item.description
        - item.quantity
        - item.weight
        - order.clientNumber
        - order.deliveryType
        - order.pickupType
        - order.tariffId
        - recipient.city
        - recipient.contactName
        - recipient.countryCode
        - recipient.house
        - recipient.phone
        - recipient.region
        - recipient.street
        - sender.city
        - sender.contactName
        - sender.countryCode
        - sender.house
        - sender.phone
        - sender.region
        - sender.street
      type: object
      properties:
        order.clientNumber:
          type: string
          description: Номер заказа в системе клиента
          example: A
        order.weight:
          type: integer
          description: Вес всего заказа в граммах
        order.height:
          type: integer
          description: Высота заказа в сантиметрах
        order.length:
          type: integer
          description: Длина заказа в сантиметрах
        order.width:
          type: integer
          description: Ширина заказа в сантиметрах
        order.providerKey:
          type: string
          description: Код службы доставки
          example: F
        order.providerConnectId:
          type: integer
          description: ID подключения к СД
        order.pickupType:
          type: integer
          description: >-
            Тип забора груза (1 - от двери клиента; 2 – клиент привозит заказ на
            склад СД)
        order.deliveryType:
          type: integer
          description: Тип доставки (1 - до двери; 2 – до ПВЗ)
        order.pointInId:
          type: integer
          description: Идентификатор точки забора товара в системе apiship
        order.pointOutId:
          type: integer
          description: Идентификатор точки выдачи товара в системе apiship
        order.tariffId:
          type: integer
          description: Тариф службы доставки, по которому осуществляется доставка
        order.deliveryTimeStart:
          type: string
          pattern: ^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$
          description: Начальное время доставки
          example: K
        order.deliveryTimeEnd:
          type: string
          description: Конечное время доставки
          example: L
        cost.assessedCost:
          type: integer
          description: Оценочная стоимость / сумма страховки (в рублях)
        cost.codCost:
          type: integer
          description: Сумма наложенного платежа с учетом НДС (в рублях)
        cost.deliveryCost:
          type: integer
          description: >-
            Стоимость доставки с получателя. codCost должен содержать в себе эту
            сумму.
        sender.phone:
          type: string
          description: Контактный телефон
          example: P
        sender.companyName:
          type: string
          description: Название компании
          example: R
        sender.contactName:
          type: string
          description: ФИО контактного лица
          example: S
        sender.countryCode:
          type: string
          description: Код страны в соответствии с ISO 3166-1 alpha-2
          example: T
        sender.region:
          type: string
          description: Область или республика или край
          example: U
        sender.city:
          type: string
          description: Город или населенный пункт
          example: V
        sender.street:
          type: string
          description: Улица
          example: W
        sender.house:
          type: string
          description: Дом
          example: X
        sender.block:
          type: string
          description: Строение/Корпус
          example: 'Y'
        sender.office:
          type: string
          description: Офис/Квартира
          example: Z
        sender.email:
          type: string
          description: Контактный email адрес
          example: AA
        sender.AddressString:
          type: string
          description: Адрес одной строкой
          example: AB
        recipient.phone:
          type: string
          description: Контактный телефон
          example: AC
        recipient.companyName:
          type: string
          description: Название компании
          example: AD
        recipient.contactName:
          type: string
          description: ФИО контактного лица
          example: AE
        recipient.countryCode:
          type: string
          description: Код страны в соответствии с ISO 3166-1 alpha-2
          example: AF
        recipient.region:
          type: string
          description: Область или республика или край
          example: AG
        recipient.city:
          type: string
          description: Город или населенный пункт
          example: AH
        recipient.street:
          type: string
          description: Улица
          example: AI
        recipient.house:
          type: string
          description: Дом
          example: AJ
        recipient.block:
          type: string
          description: Строение/Корпус
          example: AK
        recipient.office:
          type: string
          description: Офис/Квартира
          example: AL
        recipient.email:
          type: string
          description: Контактный email адрес
          example: AM
        recipient.AddressString:
          type: string
          description: Адрес одной строкой
          example: AN
        item.description:
          type: string
          description: Наименование товара
          example: AO
        item.quantity:
          type: integer
          description: Кол-во товара
        item.articul:
          type: string
          description: Артикул товара
          example: AR
        item.barcode:
          type: string
          description: ШК предмета
          example: AS
        item.assessedCost:
          type: number
          description: Оценочная стоимость единицы товара в рублях
        item.cost:
          type: number
          description: Наложенная стоимость товара в рублях
        item.weight:
          type: number
          description: Вес единицы товара в граммах
        item.height:
          type: number
          description: Высота единицы товара в сантиметрах
        item.length:
          type: number
          description: Длина единицы товара в сантиметрах
        item.width:
          type: number
          description: Ширина единицы товара в сантиметрах
        place.placeNumber:
          type: string
          description: Номер места в информационной системе клиента
          example: AZ
        place.barcode:
          type: string
          description: Штрихкод места
          example: BA
        place.height:
          type: number
          description: Высота места в сантиметрах
        place.width:
          type: number
          description: Ширина места в сантиметрах
        place.length:
          type: number
          description: Длина места в сантиметрах
        place.weight:
          type: number
          description: Вес места в граммах
        place.items:
          type: array
          description: Содержимое места
          items:
            $ref: '#/components/schemas/Item'
        extraParams.*:
          type: string
          description: >-
            Дополнительная услуга (вместо звёздочки в названии параметра
            необходимо подставить название дополнительной услуги)
          example: BG
    OrderResponse:
      type: object
      properties:
        orderId:
          type: integer
          description: Номер заказа
          example: 1002
        created:
          type: string
          format: date-time
          description: Дата создания заказа
    OrderSyncResponse:
      type: object
      properties:
        orderId:
          type: integer
          description: Номер заказа
          example: 1002
        providerNumber:
          type: string
          description: Номер заказа в системе службы доставки
          example: ABC123000
        additionalProviderNumber:
          type: string
          description: Дополнительный номер заказа в системе службы доставки
          example: '21309812039812'
        created:
          type: string
          format: date-time
          description: Дата создания заказа
    CancelOrderResponse:
      type: object
      properties:
        orderId:
          type: integer
          description: Номер заказа
          example: 1002
        canceled:
          type: string
          description: Дата отмены заказа
          example: '2015-08-10T12:38:22+03:00'
    DeleteOrderResponse:
      type: object
      properties:
        orderId:
          type: integer
          description: Номер заказа
          example: 1002
        deleted:
          type: string
          description: Дата удаления заказа
          example: '2015-08-10T12:38:22+03:00'
    OrderUploadResponse:
      required:
        - resultItems
      type: object
      properties:
        resultItems:
          type: array
          description: Массив данных о созданных заказах
          items:
            $ref: '#/components/schemas/OrderUploadItem'
        base64:
          type: string
          description: Файл в base64 с описанием ошибок создания заказа
          example: iVBORw0KGgoAAAANSUhEUgAAB4AAAAQ4CAYAAADo08FDAA...
    OrderUploadItem:
      required:
        - clientNumber
        - row
      type: object
      properties:
        clientNumber:
          type: string
          description: Номер заказа в системе клиента
          example: '1564846'
        row:
          type: integer
          description: Номер строки в таблице
          example: 3
        orderId:
          type: integer
          description: Номер заказа в системе Apiship
          example: 837456
        providerNumber:
          type: string
          description: Номер заказа в системе СД
          example: '11234564468'
        created:
          type: string
          description: Дата создания заказа
          example: '2015-08-10T12:38:22+03:00'
    LoginRequest:
      required:
        - login
        - password
      type: object
      properties:
        login:
          type: string
          description: Логин пользователя. Имя или email.
          example: test
        password:
          type: string
          description: Пароль пользователя
          example: test
    LoginResponse:
      type: object
      properties:
        token:
          type: string
          description: Ключ безопасности
          example: 6ce72d3ed0c8179be778b5db8e552df7
    ExtraParam:
      required:
        - key
        - value
      type: object
      properties:
        key:
          type: string
          description: Идентификатор дополнительного параметра
          example: testParam
        value:
          type: string
          description: Значение дополнительного параметра
          example: testValue
    ExtraParamOnCourier:
      required:
        - logsis.warehouse_code
      type: object
      properties:
        logsis.warehouse_code:
          type: string
          description: Идентификатор дополнительного параметра
          example: 123
    PaginationMeta:
      type: object
      properties:
        total:
          type: integer
        offset:
          type: integer
        limit:
          type: integer
    Params:
      deprecated: true
      type: object
      properties:
        id:
          type: integer
          example: 1
        companyId:
          type: integer
          description: ID компании
          example: 1
        providerKey:
          type: string
          description: Ключ (alias) провайдера (службы доставки)
          example: cdek
        connectParams:
          type: object
          properties: {}
          description: Параметры подключения. Для разных служб - разные ключи в объекте
        insuranceRate:
          type: number
          description: Своя для компании процентная ставка страховки (%)
        cashServiceRate:
          type: number
          description: Своя для компании процентная ставка кассового обслуживания (%)
        created:
          type: integer
          description: Дата создания
        updated:
          type: integer
          description: Дата обновления
        company:
          type: object
          properties: {}
          description: Информация о связанной с настройками компании
    PointObject:
      type: object
      properties:
        id:
          type: integer
        providerKey:
          type: string
          description: Идентификатор службы доставки
          example: dpd
        providerKeyOriginal:
          type: string
          description: Признаки отношения к другим СД, Франшизам и т.д.
          example: 'yamarket'
        code:
          type: string
          description: Код терминала в системе службы доставки
        name:
          type: string
          description: Название
        postIndex:
          type: string
          description: Индекс
        lat:
          type: number
          description: Широта
        lng:
          type: number
          description: Долгота
        countryCode:
          type: string
          description: Код страны
        region:
          type: string
          description: Регион
        regionType:
          type: string
          description: Тип региона
          example: обл
        city:
          type: string
          description: Город
          example: Балашиха
        cityGuid:
          type: string
          description: ФИАС-код города
          example: 27c5bc66-61bf-4a17-b0cd-ca0eb64192d6
        cityType:
          type: string
          description: Тип города
          example: г
        community:
          type: string
          description: Населенный пункт
          example: Железнодорожный
        communityGuid:
          type: string
          description: ФИАС-код населенного пункта
          example: 33cd640c-7518-4605-b40a-717d08b7989c
        communityType:
          type: string
          description: Тип населенного пункта
          example: мкр
        area:
          type: string
          description: Район
        street:
          type: string
          description: Улица
        streetType:
          type: string
          description: Тип улицы (ул., переулок и т.п.)
          example: пр-кт
        house:
          type: string
          description: Дом
        block:
          type: string
          description: Корпус
        office:
          type: string
          description: Офис
        address:
          type: string
          description: Полный адрес, полученный от СД
        url:
          type: string
          description: Домашняя страница
        email:
          type: string
          description: email
        phone:
          type: string
          description: Телефон
        timetable:
          type: string
          description: Режим работы
        worktime:
          type: object
          description: >-
            Режим работы по дням (1 - пн; 7 - вс) Отсутствие дня означает
            выходной
          example:
            '1': 10:00/19:00
            '2': 10:00/19:00
            '3': 10:00/19:00
            '4': 10:00/19:00
            '5': 10:00/19:00
            '6': 10:00/19:00
          properties:
            '1':
              type: string
              description: Время работы в понедельник
            '2':
              type: string
              description: Время работы во вторник
            '3':
              type: string
              description: Время работы в среду
            '4':
              type: string
              description: Время работы в четверг
            '5':
              type: string
              description: Время работы в пятницу
            '6':
              type: string
              description: Время работы в субботу
            '7':
              type: string
              description: Время работы в воскресенье
        fittingRoom:
          type: integer
          description: Наличие примерочной
        cod:
          type: integer
          description: >-
            Имеется ли возможность оплаты при доставке (null - нет данных, 1 -
            оплата доступна, 0 - оплата не доступна)
        paymentCash:
          type: integer
          description: >-
            Имеется ли возможность оплаты наличными (null - нет данных, 1 -
            оплата наличными доступна, 0 - оплата наличными не доступна)
        paymentCard:
          type: integer
          description: >-
            Имеется ли возможность оплаты банковской картой (null - нет данных,
            1 - оплата картой доступна, 0 - оплата картой не доступна)
        multiplaceDeliveryAllowed:
          type: integer
          description: >-
            Возможна ли выдача многоместных отправлений (null - нет данных, 1 -
            выдача возможна, 0 - выдача невозможна)
        availableOperation:
          type: integer
          description: Тип операции (1 - прием, 2 - выдача, 3 - прием и выдача)
        type:
          type: integer
          description: >-
            Тип точки (1 - Пункт выдачи заказа, 2 - Постамат, 3 - Отделение
            Почты России, 4 - Терминал)
        description:
          type: string
          description: Описание ПВЗ, как пройти
        photos:
          type: array
          items:
            type: string
            description: Ссылка на изображение
            example: https://example.com/image/123.jpeg
        metro:
          type: array
          description: Список ближайших станций метро (до трёх штук)
          items:
            type: object
            properties:
              name:
                type: string
                description: Название метро
                example: Козья слобода
              distance:
                type: number
                description: Расстояние до метро в км
                example: 2.4
              line:
                type: string
                description: Линия метро
                example: Центральная
        extra:
          type: array
          description: Дополнительные параметры для службы
          items:
            type: object
            properties:
              key:
                type: string
                description: Название дополнительного параметра
              value:
                type: string
                description: Значение дополнительного параметра
        limits:
          type: object
          properties:
            maxSizeA:
              type: integer
              description: Максимальная длина стороны А в см
            maxSizeB:
              type: integer
              description: Максимальная длина стороны B в см
            maxSizeC:
              type: integer
              description: Максимальная длина стороны С в см
            maxSizeSum:
              type: integer
              description: Максимальная сумма длин всех сторон в см
            minWeight:
              type: integer
              description: Минимальный вес в г
            maxWeight:
              type: integer
              description: Максимальный вес в г
            maxCod:
              type: number
              description: Максимальная сумма наложенного платежа в рублях
            maxVolume:
              type: integer
              description: Максимальный объем в см3
          example:
            maxSizeA: 62
            maxSizeB: 57
            maxSizeC: 56
            maxSizeSum: 180
            minWeight: 0
            maxWeight: 15000
            maxCod: 100.2
            maxVolume: 1000000
        enabled:
            type: boolean
            description: Доступность пункта
    ProviderObject:
      type: object
      properties:
        key:
          type: string
          description: Идентификатор службы доставки
          example: dpd
        name:
          type: string
          description: Название службы доставки
          example: DPD
        description:
          type: string
          description: Описание службы доставки
          example: >-
            Сеть пунктов выдачи и приема заказов в регионах на основе агентской
            сети
    AdditionalServiceObject:
      type: object
      properties:
        providerKey:
          type: string
          description: Идентификатор службы доставки
          example: cdek
        name:
          type: string
          description: Название услуги
          example: Частичная доставка
        extraParamName:
          type: string
          description: Ключ в extraParams
          example: cdek.PartialDelivery
        valueType:
          type: string
          enum:
            - bool
            - string
            - int
            - float
          description: |
            Тип значения для extraParams:
             * `bool` - булев тип значения, принимает *true, false, 0, 1*
             * `string` - строковый тип значения, принимает *"", "qwerty123"*
             * `int` - целочисленный тип значения, принимает *1, 2, 3, 4, 5, 6*
             * `float` - число с плавающей точкой, принимает *999.123, 6343.7898*
          example: bool
        valueDescription:
          type: string
          description: Описание типа значения для extraParams
          example: 1-включить услугу, 0-не использовать
        description:
          type: string
          description: Описание услуги
    TariffObject:
      type: object
      properties:
        id:
          type: integer
          description: Идентификатор тарифа
          example: 1001
        providerKey:
          type: string
          description: Идентификатор службы доставки, которой принадлежит тариф
          example: cdek
        name:
          type: string
          description: Название тарифа
          example: PelSt
        description:
          type: string
          description: Описание тарифа
          example: Description
        aliasName:
          type: string
          description: Альтернативное название тарифа
          example: Пеликан стандарт
        weightMin:
          type: integer
          description: Минимальное ограничение по весу для тарифа (граммы)
          example: 100
        weightMax:
          type: integer
          description: Максимальное ограничение по весу для тарифа (граммы)
          example: 30000
        pickupType:
          type: integer
          description: >-
            Тип приема тарифа (1 - от двери, 2 - от ПВЗ, null - доступны оба
            варианта)
          example: 1
        deliveryType:
          type: integer
          description: >-
            Тип выдачи тарифа (1 - до двери, 2 - до ПВЗ, null - доступны оба
            варианта)
          example: 1
    StatusObject:
      type: object
      properties:
        key:
          type: string
          description: Идентификатор статуса
          example: pending
        name:
          type: string
          description: Название статуса
          example: Не обработан
        description:
          type: string
          description: Описание статуса
          example: Заказ ещё не обработан службой доставки
    ProviderStatus:
      type: object
      properties:
        id:
          type: string
          description: Идентификатор статуса
          example: '123'
        code:
          type: string
          description: Код статуса в сервисе
          example: onWay
        name:
          type: string
          description: Название статуса в сервисе
          example: В пути
        description:
          type: string
          description: Описание статуса в сервисе
        providerCode:
          type: string
          description: Код статуса в СД
          example: '12'
        providerName:
          type: string
          description: Название статуса в СД
          example: Едет по городу
        providerDescription:
          type: string
          description: Описание статуса в СД
        provider:
          type: object
          properties:
            key:
              type: string
              description: Ключ СД
              example: cdek
            name:
              type: string
              description: Название СД
              example: СДЭК
    B2cplCityObject:
      type: object
      properties:
        id:
          type: integer
        region:
          type: string
          description: Регион/область
        residence:
          type: string
          description: Населенный пункт
        zipFirst:
          type: string
          description: Начало диапазона почтовых индексов
        zipLast:
          type: string
          description: Конец диапазона почтовых индексов
        transportDays:
          type: integer
          description: >-
            Длительность магистральной перевозки между Москвой и городом
            получателем в рабочих днях
        flagCourier:
          type: string
          description: Возможность курьерской доставки в этом диапазоне
        flagPvz:
          type: string
          description: Возможность ПВЗ доставки в этом диапазоне
        flagAvia:
          type: string
          description: >-
            Возможность доставки авиа. 0 – нет авиа доставки, 1 – только авиа
            доставка, 2 – возможна как наземная, так и авиа доставки
        cityGuid:
          type: string
          description: ФИАС для города/села/поселка
    BoxberryCityObject:
      type: object
      properties:
        id:
          type: "string"
        code:
          type: "string"
          description: "Код города"
        cityGuid:
          type: "string"
          description: "ФИАС Города"
        region:
          type: "string"
          description: "Регион"
        district:
          type: "string"
          description: "Район"
        courierZips:
          type: "array"
          description: "Индексы"
          items:
            type: "string"
        receptionLaP:
          type: "string"
          description: "Прием писем и посылок от физ. лиц (0/1)"
        deliveryLaP:
          type: "string"
          description: "Выдача писем и посылок физ. лиц (0/1)"
        reception:
          type: "string"
          description: "Прием заказов от ИМ на пунктах выдачи (0/1)"
        pickupPoint:
          type: "string"
          description: "Наличие пунктов выдачи заказов в городе (0/1)"
        courierDelivery:
          type: "string"
          description: "Наличие курьерской доставки в городе"
        foreignReceptionReturns:
          type: "string"
          description: "Прием международных возвратов (0/1)"
        terminal:
          type: "string"
          description: "Наличие терминала в городе (0/1)"
        courierReception:
          type: "string"
          description: "Наличие курьерского забора (0/1)"
    DpdCityObject:
      type: object
      properties:
        id:
          type: integer
        dpdCityId:
          type: integer
        cityCode:
          type: string
        cityGuid:
          type: string
        cityName:
          type: string
        countryCode:
          type: string
        countryName:
          type: string
        regionCode:
          type: integer
        regionName:
          type: string
        abbreviation:
          type: string
        isCodCost:
          type: integer
    CdekCityObject:
      type: object
      properties:
        fiasGuid:
          type: string
        fullName:
          type: string
        cityUuid:
          type: string
        cdekId:
          type: integer
        cityName:
          type: string
        oblName:
          type: string
        countryCode:
          type: string
        codCostLimit:
          type: string
    StatusCommon:
      type: object
      properties:
        orderInfo:
          $ref: '#/components/schemas/OrderInfo'
        status:
          $ref: '#/components/schemas/OrderStatus'
      description: Информация о статусе заказа с описанием заказа
    StatusHistoryByDate:
      type: object
      properties:
        orderInfo:
          $ref: '#/components/schemas/OrderInfo'
        statuses:
          type: array
          description: Массив истории статусов
          items:
            $ref: '#/components/schemas/OrderStatus'
      description: Информация об истории статусов заказов с описанием заказа
    StatusHistoryByInterval:
      type: object
      properties:
        orderInfo:
          $ref: '#/components/schemas/OrderInfo'
        statuses:
          type: array
          description: Массив истории статусов
          items:
            $ref: '#/components/schemas/OrderStatus'
      description: Информация об истории статусов заказов с описанием заказа
    OrderStatus:
      type: object
      properties:
        key:
          type: string
          description: Идентификатор статуса заказа
          example: pending
        name:
          type: string
          description: Название статуса
          example: Не обработан
        description:
          type: string
          description: Описание статуса
          example: Заказ ещё не обработан службой доставки
        created:
          type: string
          description: дата и время установки данного статуса
          example: '2015-08-07T10:15:17+04:00'
        providerCode:
          type: string
          description: Код статуса в системе службы доставки
          example: '4'
        providerName:
          type: string
          description: Название статуса в системе службы доставки
        providerDescription:
          type: string
          description: Описание статуса в системе службы доставки
        createdProvider:
          type: string
          description: Дата создания статуса в системе службы доставки
          example: '2015-08-07T10:15:25+04:00'
        errorCode:
          type: string
          description: |-
            Коды ошибок:
            100 - ошибка в ApiShip;
            200 - ошибка в СД;
            300 - ошибка клиента (некорректные данные).
          example: '200'
      description: Статус заказа
    DeliveryType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
    PickupType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
    PaymentMethod:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
    PointOperation:
      type: object
      properties:
        id:
          type: integer
          example: 1
        description:
          type: string
          example: Выдача товаров
    PointType:
      type: object
      properties:
        id:
          type: integer
          example: 1
        description:
          type: string
          example: Пункт выдачи заказа
    OrderInfo:
      type: object
      properties:
        orderId:
          oneOf:
            - type: integer
              description: ID заказа
            - type: string
              description: ID отслеживания внешнего заказа
        providerKey:
          type: string
          description: Код службы доставки
        providerNumber:
          type: string
          description: Номер заказа в системе службы доставки
        returnProviderNumber:
          type: string
          description: Номер возврата заказа в системе службы доставки
        additionalProviderNumber:
          type: string
          description: Дополнительный номер заказа в системе службы доставки
        barcode:
          type: string
          description: Номер заказа для печати штрих-кода
        clientNumber:
          type: string
          description: Номер заказа в системе клиента
        trackingUrl:
          type: string
          description: Ссылка на отслеживание в системе СД
    ErrorOrderInfo:
      type: object
      properties:
        orderId:
          type: integer
          description: ID заказа
          example: 1112
        message:
          type: string
          description: Описание причины неудачного получения статуса по заказу
          example: Заказ принадлежит другому клиенту
    WaybillItem:
      type: object
      properties:
        providerKey:
          type: string
          description: Ключ службы доставки
          example: dpd
        file:
          type: string
          description: Путь к накладной
          example: >-
            https://storage.apiship.ru/file/get?file=5ce23c800dbaca09300db2ca815aadc1.pdf
        orderIds:
          type: array
          description: Массив ID заказов, для которой сгенерирована накладная
          items:
            type: integer
            example: 1012
    StatusIdsRequest:
      required:
        - orderIds
      type: object
      properties:
        orderIds:
          type: array
          description: Массив ID заказов (Предел 100 заказов)
          xml:
            name: orderIds
            wrapped: true
          items:
            oneOf:
              - type: integer
                example: 1012
              - type: string
                example: e6f3527e-596d-4b7d-845d-df9a505117b4
            xml:
              name: item
      xml:
        name: request
    CalculatorDirection:
      required:
        - addressString
        - city
        - cityGuid
        - countryCode
      type: object
      properties:
        countryCode:
          type: string
          description: Код страны в соответствии с ISO 3166-1 alpha-2
          example: RU
        index:
          type: string
          description: Почтовый индекс
          example: '105066'
        addressString:
          type: string
          description: >-
            Полный почтовый адрес. Если заполнен, то считается приоритетным,
            если не указан cityGuid.
            <br />
            *Обязателен, если не указаны cityGuid или city.
          example: г Москва, ул Нижняя Красносельская, д 35
        region:
          type: string
          description: Регион/Край/Область
          example: г Москва
        city:
          type: string
          description: >-
            Название города (обязательно если не заполнен cityGuid).
            <br />
            *Обязателен, если не указаны cityGuid или addressString.
          example: г Москва
        cityGuid:
          type: string
          description: >-
            ФИАС код города\поселения в базе fias.nalog.ru (обязательно, если не
            заполнен city).
            <br />
            *Обязателен, если не указаны city или addressString.
          example: 0c5b2444-70a0-4932-980c-b4dc0d3f02b5
        lat:
          type: number
          format: float
          description: >-
            Широта. Обязательно указывайте, если это доставка через такси,
            например, Яндекс.Доставка и д.р.
          example: 55.755318
        lng:
          type: number
          format: float
          description: >-
            Долгота. Обязательно указывайте, если это доставка через такси,
            например, Яндекс.Доставка и д.р.
          example: 37.594265
    CalculatorPlace:
      allOf:
        - $ref: '#/components/schemas/Sizes'
        - type: object
          description: Место (Коробка)
          properties:
            width:
              default: 10
            height:
              default: 10
            length:
              default: 10
    CalculatorRequest:
      required:
        - places
        - assessedCost
        - from
        - to
      allOf:
        - type: object
          properties:
            to:
              $ref: '#/components/schemas/CalculatorDirection'
            from:
              $ref: '#/components/schemas/CalculatorDirection'
            places:
              type: array
              description: >-
                Места. Калькуляция многоместных заказов.. В случае когда СД не
                поддерживает многоместную калькуляцию, вес суммируется, а
                габариты всех коробок складываются в высоту и берется макс.
                длина и ширина, то есть коробки ставятся друг на друга пирамидой
                и передаются в СД для расчета
              items:
                $ref: '#/components/schemas/CalculatorPlace'
            width:
              deprecated: true
              description: Автоматически передокладывается в places[0].width
              default: 10
            height:
              deprecated: true
              description: Автоматически передокладывается в places[0].height
              default: 10
            length:
              description: Автоматически передокладывается в places[0].length
              deprecated: true
              default: 10
            weight:
              description: Автоматически передокладывается в places[0].weight
              deprecated: true
            pickupDate:
              type: string
              format: date
              description: >-
                Дата приёма груза (не обязательно, по умолчания берется текущая
                дата)
            pickupTypes:
              type: array
              description: >-
                [Типы забора /lists/pickupTypes](#/lists/pickupTypes). Если не
                переданы, то рассчитываются тарифы по всем типам (Забор груза
                курьером, Сдача груза на ПВЗ)
              example:
                - 1
                - 2
              items:
                type: integer
            deliveryTypes:
              type: array
              description: >-
                [Типы доставки /lists/deliveryTypes](#/lists/deliveryTypes).
                Если не переданы, то рассчитываются тарифы по всем типам
                (Доставка Курьером, Самовывоз из ПВЗ)
              example:
                - 1
                - 2
              items:
                type: integer
            providerKeys:
              type: array
              description: >-
                Массив ключей служб доставки. Если не передавать, то рассчитает
                тарифы всех подключенных к аккаунту служб доставки
              example:
                - dpd
                - cdek
              items:
                type: string
            assessedCost:
              type: number
              format: float
              description: Оценочная стоимость (в рублях)
              example: 100
              default: 0
            codCost:
              type: number
              format: float
              description: Сумма наложенного платежа
              example: 100
              default: 0
            includeFees:
              type: boolean
              description: >-
                Суммировать ли к итоговой стоимости все сборы СД (страховка и
                комиссия за НП)
              format: boolean
              example: false
              default: false
            timeout:
              type: integer
              description: >-
                Время ожидания ответа (мс.) от провайдера, результаты по
                провайдерам, которые не успели в указанное время выдаваться не
                будут
              example: 20000
              default: 10000
            skipTariffRules:
              type: boolean
              description: >-
                Пропускает применение правил редактора тарифов. Полезно, если
                надо проверить корректность применения правил
              default: false
            extraParams:
              type: object
              description: >-
                Дополнительные параметры. Например. можно рассчитать DPD по
                какому-то определенному подключению (договору), передав
                dpd.providerConnectId = id из
                [/connections/getListConnections](#/connections/getListConnections)


                Передавать как {"<ключ\_службы\_доставки>.<код_параметра>":
                "<значение>"}
              additionalProperties:
                type: string
              example:
                dpd.providerConnectId: '0'
              default: {}
            promoCode:
              type: string
              description: >-
                Промокод. В редакторе тарифов можно указать промокод, по
                которому можно изменять тарифы, например, скидку на стоимость
                доставки.
              example: SALE10
            customCode:
              type: string
              description: >-
                Пользовательское поле. В это поле можно передать, например,
                название сайта и по нему строить правила в редакторе сайтов.
              example: example.com
            tariffIds:
              type: array
              description: Тарифы, для которых необходимо произвести расчёт
              example: [123]
              items:
                type: integer
            pointInId:
              type: integer
              description: Идентификатор ПВЗ от которого вести расчет
              example: 123
            pointOutId:
              type: integer
              description: Идентификатор ПВЗ до которого вести расчет
              example: 123
        - $ref: '#/components/schemas/Sizes'
    CalculatorToDoorResult:
      type: object
      properties:
        providerKey:
          type: string
          example: dpd
        tariffs:
          type: array
          items:
            type: object
            properties:
              tariffProviderId:
                type: string
                description: ID тарифа в службе доставки
                example: NDY
              tariffId:
                type: integer
                description: ID тарифа в ApiShip
              tariffName:
                type: string
                description: Название тарифа
              pickupTypes:
                type: array
                description: >-
                  Типы забора (см. /lists/pickupTypes), если не переданы берутся
                  оба типа
                example:
                  - 1
                  - 2
                items:
                  type: integer
              deliveryTypes:
                type: array
                description: >-
                  Типы доставки (см. /lists/deliveryTypes), если не переданы
                  берутся оба типа
                example:
                  - 1
                items:
                  type: integer
              deliveryCost:
                type: number
                description: Стоимость тарифа
              deliveryCostOriginal:
                type: number
                description: Стоимость тарифа до применения правил
              feesIncluded:
                type: boolean
                description: >-
                  Были ли включены сборы СД в общую стоимость (deliveryCost).
                  NULL если невозможно определить
                format: boolean
              insuranceFee:
                type: number
                description: Сумма страховых сборов. NULL если невозможно определить
              cashServiceFee:
                type: number
                description: >-
                  Сумма сборов за наложенный платёж. NULL если невозможно
                  определить
              daysMax:
                type: integer
                deprecated: true
                description: Максимальное кол-во дней доставки
              daysMin:
                type: integer
                deprecated: true
                description: Минимальное кол-во дней доставки
              calendarDaysMax:
                type: integer
                description: Максимальное кол-во календарных дней доставки
              calendarDaysMin:
                type: integer
                description: Минимальное кол-во календарных дней доставки
              workDaysMax:
                type: integer
                description: Максимальное кол-во рабочих дней доставки
              workDaysMin:
                type: integer
                description: Минимальное кол-во рабочих дней доставки
    CalculatorToPointResult:
      allOf:
        - $ref: '#/components/schemas/CalculatorToDoorResult'
        - type: object
          properties:
            tariffs:
              type: array
              items:
                type: object
                properties:
                  deliveryTypes:
                    example:
                      - 2
                  pointIds:
                    type: array
                    description: Массив ID доступных ПВЗ для каждого из тарифов
                    example:
                      - 1
                      - 2
                      - 3
                    items:
                      type: integer
    CalculatorIntervalsRequest:
      required:
        - from
        - to
      allOf:
        - type: object
          properties:
            to:
              $ref: '#/components/schemas/CalculatorDirection'
            from:
              $ref: '#/components/schemas/CalculatorDirection'
            codCost:
              type: number
              format: float
              description: Сумма наложенного платежа
              example: 100
              default: 0
            pickupDate:
              type: string
              format: date
              description: >-
                Дата приёма груза
            deliveryDate:
              type: string
              format: date
              description: >-
                Дата доставки груза
            pickupTypes:
              type: array
              description: >-
                [Типы забора /lists/pickupTypes](#/lists/pickupTypes). Если не
                переданы, то рассчитываются тарифы по всем типам (Забор груза
                курьером, Сдача груза на ПВЗ)
              example:
                - 1
                - 2
              items:
                type: integer
            providerKeys:
              type: array
              description: >-
                Массив ключей служб доставки. Если не передавать, то рассчитает
                тарифы всех подключенных к аккаунту служб доставки
              example:
                - dpd
                - cdek
              items:
                type: string
            extraParams:
              type: object
              description: >-
                Дополнительные параметры. Например. можно рассчитать DPD по
                какому-то определенному подключению (договору), передав
                dpd.providerConnectId = id из
                [/connections/getListConnections](#/connections/getListConnections)


                Передавать как {"<ключ\_службы\_доставки>.<код_параметра>":
                "<значение>"}
              additionalProperties:
                type: string
              example:
                dpd.providerConnectId: '0'
              default: { }
            tariffIds:
              type: array
              description: Тарифы, для которых необходимо произвести расчёт
              example: [ 123 ]
              items:
                type: integer
    CalculatorIntervalsResponse:
      type: object
      properties:
        deliveryToDoor:
          type: array
          items:
            type: object
            properties:
              providerKey:
                type: string
              tariffs:
                type: array
                items:
                  $ref: '#/components/schemas/CalculatorIntervalsTariffResult'
    CalculatorIntervalsTariffResult:
      type: object
      properties:
        tariffProviderId:
          type: string
          description: ID тарифа в службе доставки
          example: NDY
        tariffId:
          type: integer
          description: ID тарифа в ApiShip
        tariffName:
          type: string
          description: Название тарифа
        pickupTypes:
          type: array
          description: >-
            Типы забора (см. /lists/pickupTypes), если не переданы берутся
            оба типа
          example:
            - 1
            - 2
          items:
            type: integer
        deliveryTypes:
          type: array
          description: >-
            Типы доставки (см. /lists/deliveryTypes), если не переданы
            берутся оба типа
          example:
            - 1
          items:
            type: integer
        toIntervals:
          type: array
          items:
            $ref: '#/components/schemas/DeliveryInterval'
    DeliveryInterval:
      type: object
      properties:
        date:
          type: string
          description: >-
            Дата интервала. Значение будет null, если интервал статический(не изменяется)
          example: "2023-03-03"
          nullable: true
        from:
          type: string
          description: Время "от"
          example: "10:00"
        to:
          type: string
          description: Время "до"
          example: "18:00"

    LabelsRequest:
      required:
        - format
        - orderIds
      type: object
      properties:
        orderIds:
          type: array
          description: Массив ID заказов
          items:
            type: integer
            example: 1012
        format:
          type: string
          description: Формат вывода ярлыков (пока только pdf)
          example: pdf
    DocumentsRequest:
      required:
        - orderIds
      type: object
      properties:
        orderIds:
          type: array
          description: Массив ID заказов
          items:
            type: integer
            example: 1012
        format:
          type: string
          description: Формат получаемого файла
          example: pdf
    OrderInfoResponse:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/OrderInfoData'
        cost:
          $ref: '#/components/schemas/OrderInfoCost'
        sender:
          $ref: '#/components/schemas/Sender'
        recipient:
          $ref: '#/components/schemas/Recipient'
        returnAddress:
          $ref: '#/components/schemas/ReturnAddress'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
        places:
          type: array
          items:
            $ref: '#/components/schemas/Place'
        extraParams:
          type: array
          items:
            $ref: '#/components/schemas/ExtraParam'
        extendedInfo:
          $ref: '#/components/schemas/ExtendedOrderData'
    ExtendedOrderData:
        type: object
        properties:
          check:
            type: object
            nullable: true
            properties:
              url:
                type: string
                description: 'Ссылка на чек'
                example: 'https://check.example.com/checkurldata'
              fiscalNumber:
                type: string
                description: 'Номер фискального накопителя'
                example: '9999078902006263'
              fiscalDocumentNumber:
                type: string
                description: 'Порядковый номер фискального документа'
                example: '917'
              fiscalAttribute:
                type: string
                description: 'Фискальный признак документа'
                example: '2405333328'
              type:
                type: integer
                description: '1 - приход; 2- возврат'
                example: 1
              amount:
                type: number
                description: 'Сумма по чеку (в рублях)'
                example: '146.33'
              createdProvider:
                type: string
                description: 'Дата и время формирования чека'
                example: '1710940026'
              created:
                type: string
                description: 'Дата и время получения информации о чеке'
                example: '1710940026'
          factOrderWeight:
            type: integer
            description: 'Фактический вес отправления (граммы)'
            example: 400
          factVolumeCm3:
            type: integer
            description: 'Фактический объём отправления (см3)'
            example: 4000
          factPlacesWeight:
            type: array
            description: 'Фактический вес отправления (граммы)'
            items:
              type: object
              properties:
                placeId:
                  type: integer
                  description: 'Номер грузоместа в ApiShip'
                  example: 112233
                weight:
                  type: integer
                  description: 'Вес грузоместа (граммы)'
                  example: 400
          planDeliveryCost:
            type: number
            description: 'Плановая стоимость доставки (рубли)'
            example: 146.33
          factDeliveryCost:
            type: number
            description: 'Фактическая стоимость доставки (рубли)'
            example: 146.33
          factReturnDeliveryCost:
            type: number
            description: 'Фактическая стоимость возврата (рубли)'
            example: 146.33
          factCodCost:
            type: number
            description: 'Фактический наложенный платеж (рубли)'
            example: 146.33
          factCodDate:
            nullable: true
            type: string
            description: 'Дата перечисления наложенного платежа'
            example: '2024-03-20T13:29:46+00:00'
          usedPaymentMethod:
            nullable: true
            type: string
            enum: ['cash','common','card']
            description: |
                Тип оплаты:
                - 'cash' - наличными;
                - 'card' - картой;
                - 'common' - наличными и кредитной карточкой;
          orderServicesDetails:
            type: array
            items:
              type: object
              properties:
                serviceKey:
                  type: string
                  description: 'Код услуги'
                serviceName:
                  type: string
                  description: 'Название услуги'
                serviceProviderCode:
                  type: string
                  description: 'Код услуги в СД'
                serviceProviderName:
                  type: string
                  description: 'Название услуги в СД'
                serviceProviderCost:
                  type: string
                  description: 'Стоимость услуги (рубли)'
          returnReason:
            nullable: true
            type: object
            properties:
              returnReasonKey:
                type: string
                description: 'Код причины возврата'
                example: ""
              returnReasonName:
                type: string
                description: 'Описание причины возврата'
                example: ""
    OrderInfoData:
      allOf:
        - type: object
          properties:
            orderId:
              type: integer
              description: ID заказа
              example: '11000010'
        - $ref: '#/components/schemas/OrderDataResponse'
    CreateWarehouseRequest:
      required:
        - federalDistrict
        - regionCode
        - timezone
        - warehouse
        - workingTime
      type: object
      properties:
        providerConnectId:
          type: string
          description: >-
            ID подключения к 5Пост (если не указано, создается по самому первому
            созданному подключению)
          example: '12345'
        regionCode:
          type: string
          description: Код региона, в котором находится склад
          example: '77'
        federalDistrict:
          type: string
          description: Наименование федерального округа
          example: Центральный
        warehouse:
          $ref: '#/components/schemas/X5Warehouse'
        workingTime:
          type: array
          items:
            $ref: '#/components/schemas/WorkingTime'
        timezone:
          type: string
          description: Часовой пояс склада
          example: '+03:00'
    CreateWarehouseResponse:
      required:
        - pointId
        - status
      type: object
      properties:
        status:
          type: string
          example: OK
        description:
          type: string
          example: ''
        pointId:
          type: integer
          description: Id точки
          example: 6374
    X5Warehouse:
      required:
        - area
        - city
        - code
        - countryCode
        - house
        - name
        - phone
        - postIndex
        - region
        - street
      type: object
      properties:
        code:
          type: string
          description: Код склада в системе клиента
          example: '123'
        name:
          type: string
          description: Название
          example: абв
        postIndex:
          type: string
          description: Индекс
          example: '394026'
        lat:
          type: number
          description: Широта
          example: 51.680945
        lng:
          type: number
          description: Долгота
          example: 39.179455
        countryCode:
          type: string
          description: Код страны
          example: RU
        region:
          type: string
          description: Регион
          example: Воронежская
        regionType:
          type: string
          description: Тип региона
          example: обл
        city:
          type: string
          description: Город
          example: Воронеж
        cityGuid:
          type: string
          description: ID города в базе ФИАС
          example: dd8caeab-c685-4f2a-bf5f-550aca1bbc48
        cityType:
          type: string
          description: Тип населенного пункта
          example: г
        area:
          type: string
          description: Район
          example: ''
        street:
          type: string
          description: Улица
          example: Труда
        streetType:
          type: string
          description: Тип улицы (ул., переулок и т.п.)
          example: пр-кт
        house:
          type: string
          description: Дом
          example: 46А
        block:
          type: string
          description: Корпус
          example: ''
        office:
          type: string
          description: Офис
          example: ''
        address:
          type: string
          description: Полный адрес
          example: 394026, обл. Воронежская, г. Воронеж, пр-кт. Труда, д. 46А
        phone:
          type: string
          description: Телефон
          example: '+79999999999'
    WorkingTime:
      required:
        - numberDayOfWeek
        - timeEnd
        - timeStart
      type: object
      properties:
        numberDayOfWeek:
          type: integer
          description: День недели(1 - пн; 7 - вс)
          example: 1
        timeStart:
          type: string
          description: Время начала работы склада
          example: '08:30:00'
        timeEnd:
          type: string
          description: Время окончания работы
          example: '20:00:00'
    SuccessResponse:
      type: object
      properties:
        message:
          type: string
          example: ok
    CourierCallRequest:
      required:
        - city
        - contactName
        - date
        - height
        - house
        - length
        - orderIds
        - phone
        - providerKey
        - region
        - street
        - timeEnd
        - timeStart
        - weight
        - width
      type: object
      properties:
        providerKey:
          type: string
          description: Код службы доставки
          example: cdek
        providerConnectId:
          type: integer
          description: ID подключения вашей компании к СД
          example: 123
        date:
          type: string
          format: date
          description: Дата отгрузки
        timeStart:
          type: string
          pattern: ^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$
          description: Начальное время отгрузки
          example: '15:10'
        timeEnd:
          type: string
          description: Конечное время отгрузки
          example: '18:10'
        weight:
          type: integer
          description: Вес всего заказа (в граммах)
          example: 1500
        width:
          type: integer
          description: Ширина заказа (в сантиметрах)
          example: 25
        height:
          type: integer
          description: Высота заказа (в сантиметрах)
          example: 20
        length:
          type: integer
          description: Длина заказа (в сантиметрах)
          example: 30
        orderIds:
          type: array
          description: Номера заказов которые планируются передать с этим курьером
          example:
            - 225
            - 226
          items:
            type: integer
        postIndex:
          type: string
          description: Почтовый индекс
          example: '162604'
        countryCode:
          type: string
          description: Код страны в соответствии с ISO 3166-1 alpha-2
          example: RU
        region:
          type: string
          description: Область или республика или край
          example: Смоленская область
        area:
          type: string
          description: Район
          example: Демидовский район
        city:
          type: string
          description: Город или населенный пункт
          example: Демидов
        cityGuid:
          type: string
          description: ID города в базе ФИАС
          example: dd8caeab-c685-4f2a-bf5f-550aca1bbc48
        street:
          type: string
          description: Улица
          example: Мелиоративная улица
        house:
          type: string
          description: Дом
          example: '1'
        block:
          type: string
          description: Строение/Корпус
          example: с2к1
        office:
          type: string
          description: Офис/Квартира
          example: '5'
        lat:
          type: number
          description: Широта
          format: float
          example: 55.7647252
        lng:
          type: number
          description: Долгота
          format: float
          example: 37.6537218
        addressString:
          type: string
          description: "123"
          example: '1'
        companyName:
          type: string
          description: Название компании
          example: ООО "Иваново"
        contactName:
          type: string
          description: ФИО контактного лица
          example: Иванов Иван Иванович
        phone:
          type: string
          description: Контактный телефон
          example: '79250001101'
        email:
          type: string
          description: Контактный email адрес
          example: info@domain.com
        comment:
          type: string
          description: Комментарий
          nullable: true
        extraParams:
          $ref: '#/components/schemas/ExtraParamOnCourier'
    CourierCallResponse:
      type: object
      properties:
        id:
          type: integer
          description: Номер заявки
          example: 1002
        providerNumber:
          type: string
          description: Номер заявки в системе СД
          example: '83197'
        additionalProviderNumber:
          type: string
          description: Дополнительный номер заявки в системе СД
          example: 1234-1234-1234-1234
        created:
          type: string
          format: date-time
          description: Дата создания заявки
        error:
          type: string
          description: Описан≠ие ошибки в случае невозможности вызова курьера
          example: 'Курьер не может приехать в выбранную дату'
    CancelCourierCallResponse:
      type: object
      properties:
        id:
          type: integer
          description: Номер заявки
          example: 1002
        canceled:
          type: string
          format: date-time
          description: Дата отмены заявки
    B2cplOrderCallRequest:
      required:
        - orders
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/B2cplOrderCallData'
    DpdBindPreorderPickupRequest:
      required:
        - orderId
        - orderPickupNum
      type: object
      properties:
        orderId:
          type: string
          description: Номер заказа
          example: '123456789'
        orderPickupNum:
          type: string
          example: '1343124'
    CreateAddressCodeRequest:
      required:
        - code
      type: object
      properties:
        code:
          type: string
          description: Код создаваемого адреса
          example: 1123f
        recipient:
          $ref: '#/components/schemas/Recipient'
        sender:
          $ref: '#/components/schemas/Sender'
    CreateAddressCodeResponse:
      type: object
      properties:
        status:
          type: string
          description: Статус создания от СД
          example: OK
        code:
          type: string
          description: Код адреса
          example: 1123f
        errorMessage:
          type: string
          description: Сообщение об ошибке при создании от СД
          example: ''
    LogsisUpdateWarehouseRequest:
      required:
        - warehouseId
        - name
        - working_hours
        - contact_phone
        - address
        - providerConnectId
      type: object
      properties:
        providerConnectId:
          type: string
          description: ID подключения к СД
          example: 123
        warehouseId:
          type: string
        code:
          type: string
        name:
          type: string
        working_hours:
          type: string
        is_returns_possible:
          type: boolean
        is_visible:
          type: boolean
        contact_name:
          type: string
        contact_phone:
          type: string
        address:
          type: string
        comment:
          type: string
    LogsisConfirmOrderRequest:
      required:
        - orderId
      type: object
      properties:
        orderId:
          type: string
          description: Номер заказа
          example: '123456789'
    B2cplOrderCallData:
      required:
        - name
        - orderId
        - phone
      type: object
      properties:
        phone:
          type: string
          description: Телефон клиента
          example: '89991234567'
        name:
          type: string
          description: ФИО клиента
          example: Иванов Иван Иванович
        orderId:
          type: string
          description: Номер заказа
          example: '123456789'
        source:
          type: string
          description: Источник заказа
          example: www.mysite.ru
        comment:
          type: string
          description: Комментарий к заказу
          example: Комментарий к заказу
    B2cplOrderCallResponse:
      type: object
      properties:
        orderCode:
          type: string
          description: Номер заказа
          example: '123456789'
        success:
          type: boolean
          description: Указывает успешно ли загружен телефон
          format: boolean
          example: true
        message:
          type: string
          description: Сообщение от сервиса
          example: Телефон успешно добавлен
    DpdBindPreorderPickupResponse:
      type: object
      properties:
        status:
          type: string
          description: Статус
          example: OK
        orderPickupNum:
          type: string
          example: '1343124'
        errorMessage:
          type: string
          description: Сообщение об ошибке
    LogsisConfirmOrderResponse:
      type: object
      properties:
        status:
          type: string
          description: Статус
          example: '200'
        response:
          type: array
          items:
            type: object
            properties:
              order_id:
                type: string
                description: id заказа в службе доставки
                example: LS238-5806
              inner_id:
                type: string
                description: inner_id
              Confirmed:
                type: string
                description: Статус подтверждения
                example: ОК
              Error:
                type: string
                description: Ошибки
    LogsisUpdateWarehouseResponse:
      type: object
      properties:
        status:
          type: string
          description: Статус
          example: '200'
        response:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              code:
                type: string
              name:
                type: string
              working_hours:
                type: string
              is_returns_possible:
                type: boolean
              is_visible:
                type: boolean
              contact_name:
                type: string
              contact_phone:
                type: string
              address:
                type: string
              comment:
                type: string
    ValidateOrderResponse:
      type: object
      properties:
        valid:
          type: boolean
          description: Статус
          example: true
    WarehouseBoxberry:
      required:
        - name
        - receptionPointCode
      type: object
      properties:
        name:
          type: string
          description: Наименование склада
          example: Арамильский склад
        zip:
          type: string
          description: Почтовый индекс
          example: 620010
        address:
          type: string
          description: Адрес склада
          example: Арамиль, ул.Ленина 53
        contactPerson:
          type: string
          description: Контактное лицо
          example: Федор Ильич
        contactPhone:
          type: string
          description: Контактный телефон
          example: 73432000000
        receptionPointCode:
          type: string
          description: Код пункта приема Боксберри
          example: 5450
    WarehouseCreateBoxberry:
      required:
        - code
      allOf:
        - properties:
            code:
              type: string
              description: Уникальный код склада
              example: 125333
        - $ref: '#/components/schemas/WarehouseBoxberry'
    WarehouseInfoBoxberry:
      properties:
        err:
          type: boolean
          description: Наличие ошибки при выполнении
          example: false
        warehouses:
          type: array
          description: Список складов типа WarehouseCreateBoxberry
          items:
            $ref: '#/components/schemas/WarehouseCreateBoxberry'
    SaveOwnerOfTheGoods:
      required:
        - OwnerName
        - OwnerLegalName
        - OwnerINN
        - OwnerKPP
        - AccountName
        - AccountBIK
        - AccountNumber
      properties:
        OwnerName:
          type: string
          description: Наименование контрагента
          example: Контрагент
        OwnerLegalName:
          type: string
          description: Юридическое наименование контрагента
          example: ООО Контрагент
        OwnerINN:
          type: string
          description: ИНН контрагента - 10 символов
          example: 1112223334
        OwnerKPP:
          type: string
          description: КПП контрагента - 9 символов
          example: 111222333
        AccountName:
          type: string
          description: Наименование банка
          example: ООО Банк
        AccountBIK:
          type: string
          description: БИК – 9 символов
          example: 111222333
        AccountNumber:
          type: string
          description: Номер счета – 20 символов
          example: 11112222333344446000
    DeliveryCostThreshold:
      required:
        - deliveryCost
        - threshold
      properties:
        deliveryCost:
          type: number
          description: Стоимость доставки при выкупе на сумму до порогового значения
          example: 100
        threshold:
          type: number
          description: Пороговое значение суммы выкупа товара
          example: 200

    OrderCourierResponse:
      required:
        - orderId
      properties:
        orderId:
          type: integer
          description: ID заказа
          example: 123
        fullName:
          type: string
          description: ФИО курьера
          example: Иванов Иван Иванович
        providerId:
          type: string
          description: ID курьера в системе СД
          example: 123
        phone:
          type: string
          description: Номер телефона курьера
          example: +79991234567
        car:
          $ref: "#/components/schemas/CourierCar"
    PlacementCodeResponse:
      required:
        - orderId
      properties:
        orderId:
          type: integer
          description: ID заказа
          example: 123
        code:
          type: string
          description: Код размещения заказа
          example: 'ABC123'
          nullable: true
    CourierCar:
      properties:
        color:
          type: string
          description: Цвет машины
          example: Жёлтый
        model:
          type: string
          description: Модель машины
          example: KIA Optima
        number:
          type: string
          description: Номер машины
          example: А123БВ
    ExternalTrackingOrdersRequest:
      type: array
      items:
        type: object
        properties:
          providerNumber:
            type: string
            description: Номер заказа в системе службы доставки
            example: 496-С888888-99999999
            nullable: false
          providerKey:
            type: string
            description: Код службы доставки
            example: boxberry
            nullable: false
          providerConnectId:
            type: integer
            description: ID подключения вашей компании к СД
            example: 123
            nullable: true
    ExternalTrackingOrderResponse:
      type: array
      items:
       type: object
       properties:
          providerNumber:
            type: string
            description: Номер заказа в системе службы доставки
            example: 496-С888888-99999999
            nullable: false
          providerKey:
            type: string
            description: Код службы доставки
            example: boxberry
            nullable: false
          providerConnectId:
            type: integer
            description: ID подключения вашей компании к СД
            example: 123
            nullable: false
          orderId:
            type: string
            description: ID отслеживания заказа
            example: e6f3527e-596d-4b7d-845d-df9a505117b4
            nullable: false
          created:
            type: string
            example: "2021-08-21T08:06:56+03:00"
            nullable: false
    ExternalTrackingDeleteOrderResponse:
      required:
        - orderId
        - deletedAt
      properties:
        orderId:
          type: string
          description: ID отслеживания заказа
          example: e6f3527e-596d-4b7d-845d-df9a505117b4
        deletedAt:
          type: string
          description: Дата и время удаления отслеживания заказа
          example: "2021-08-21T08:06:56+03:00"
    WebhookSubscribeRequest:
      required:
        - url
        - type
      properties:
        url:
          type: string
          description: URL, на который будут отправляться запросы
          example: "https://example.com/apiship_webhook"
        type:
          type: string
          description: Тип события
          enum:
            - "ORDER_STATUS"
    WebhookSubscribeResponse:
      required:
        - uuid
      properties:
        uuid:
          type: string
          description: Уникальный идентификатор подписки
          example: e6f3527e-596d-4b7d-845d-df9a505117b4
    WebhookListResponse:
      items:
        properties:
          uuid:
            type: string
            description: Уникальный идентификатор подписки
            example: e6f3527e-596d-4b7d-845d-df9a505117b4
          url:
            type: string
            description: URL, на который будут отправляться запросы
            example: "https://example.com/apiship_webhook"
          type:
            type: string
            description: Тип события
            enum:
              - "ORDER_STATUS"
    WebhookSubscriptionDeleteResponse:
      required:
        - uuid
      properties:
        uuid:
          type: string
          description: Уникальный идентификатор подписки
          example: e6f3527e-596d-4b7d-845d-df9a505117b4
  responses:
    ServiceErrorResponse:
      description: Bad request
      headers:
        X-Tracing-Id:
          $ref: '#/components/headers/traceId'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceError'
        application/xml:
          schema:
            $ref: '#/components/schemas/ServiceError'
    ServerErrorResponse:
      description: Server error
      headers:
        X-Tracing-Id:
          $ref: '#/components/headers/traceId'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ServerError'
              - $ref: '#/components/schemas/ServiceError'
        application/xml:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ServerError'
              - $ref: '#/components/schemas/ServiceError'
  parameters:
    filterParam:
      name: filter
      in: query
      description: >-
        JSON-фильтр. Фильтрация по полям объектов. Например, чтобы отфильтровать
        по пользователю, нужно передать
        filter={"userId":"123","providerKey":"cdek"}
      schema:
        type: string
        default: '{}'
    offsetParam:
      name: offset
      in: query
      description: Minimum - 0, Maximum - 5000
      schema:
        maximum: 5000
        minimum: 0
        type: integer
        default: 0
    limitParam:
      name: limit
      in: query
      description: Minimum - 1, Maximum - 100
      schema:
        maximum: 100
        minimum: 1
        type: integer
        default: 10
  headers:
    traceId:
      description: ИД запроса, по которому служба поддержки может найти логи
      schema:
        type: string
        maximum: 32
        readOnly: true
        externalDocs:
          url: https://support.apiship.ru/knowledge_base/item/189024?sid=43514
